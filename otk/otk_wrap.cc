/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.17u-20021226-0459
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    inline SwigValueWrapper() : tt(0) { }
    inline ~SwigValueWrapper() { if (tt) delete tt; } 
    inline SwigValueWrapper& operator=(const T& t) { tt = new T(t); return *this; }
    inline operator T&() const { return *tt; }
    inline T *operator&() { return tt; }
};                                                    
#endif


#include "Python.h"

/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__)
#       if defined(_MSC_VER)
#               if defined(STATIC_LINKED)
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) extern a
#               else
#                       define SWIGEXPORT(a) __declspec(dllexport) a
#                       define SWIGIMPORT(a) extern a
#               endif
#       else
#               if defined(__BORLANDC__)
#                       define SWIGEXPORT(a) a _export
#                       define SWIGIMPORT(a) a _export
#               else
#                       define SWIGEXPORT(a) a
#                       define SWIGIMPORT(a) a
#               endif
#       endif
#else
#       define SWIGEXPORT(a) a
#       define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;                 
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;	
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti)
{
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;	
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
 l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty)
{
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
	s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) 
{
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) 
{
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
     ty = (*ty->dcast)(ptr);
     if (ty) lastty = ty;
  }
  return lastty;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
	if ((strcmp(tc->name, equiv->name) == 0))
	  SWIG_TypeClientData(tc,clientdata);
	tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}
#endif

#ifdef __cplusplus
}

#endif

/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

#ifdef SWIG_NOINCLUDE

SWIGEXPORT(PyObject *)        SWIG_newvarlink();
SWIGEXPORT(void)              SWIG_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGEXPORT(int)               SWIG_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGEXPORT(int)               SWIG_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGEXPORT(char *)            SWIG_PackData(char *c, void *, int);
SWIGEXPORT(char *)            SWIG_UnpackData(char *c, void *, int);
SWIGEXPORT(PyObject *)        SWIG_NewPointerObj(void *, swig_type_info *,int own);
SWIGEXPORT(PyObject *)        SWIG_NewPackedObj(void *, int sz, swig_type_info *);
SWIGEXPORT(void)              SWIG_InstallConstants(PyObject *d, swig_const_info constants[]);
#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",                      /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_addvarlink(PyObject *p, char *name,
	   PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) { Py_DECREF(obj); }
      return 0;
    } else {
      if (newref) { Py_DECREF(obj); }
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) { Py_DECREF(obj); }
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
      PyObject *zero = PyInt_FromLong(0);
      PyObject_SetAttrString(pyobj,(char*)"thisown",zero);
      Py_DECREF(zero);
  }
  return 0;

type_error:
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty) {
      char *temp = (char *) malloc(64+strlen(ty->name));
      sprintf(temp,"Type error. Expected %s", ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[1024];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
	PyObject *n = PyInt_FromLong(1);
	PyObject_SetAttrString(inst,(char*)"thisown",n);
	Py_DECREF(n);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

#ifdef __cplusplus
}
#endif








/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_otk__BGCCache swig_types[0] 
#define  SWIGTYPE_p_otk__BColor swig_types[1] 
#define  SWIGTYPE_p_otk__OBProperty__StringVect swig_types[2] 
#define  SWIGTYPE_p_XFontStruct swig_types[3] 
#define  SWIGTYPE_p_otk__Configuration swig_types[4] 
#define  SWIGTYPE_p_otk__PixmapMask swig_types[5] 
#define  SWIGTYPE_p_Atom swig_types[6] 
#define  SWIGTYPE_p_otk__PointerAssassin swig_types[7] 
#define  SWIGTYPE_p_otk__BImage swig_types[8] 
#define  SWIGTYPE_p_otk__OBTimer swig_types[9] 
#define  SWIGTYPE_p_otk__OtkWidget__OtkWidgetList swig_types[10] 
#define  SWIGTYPE_p_bool swig_types[11] 
#define  SWIGTYPE_p_otk__OBDisplay swig_types[12] 
#define  SWIGTYPE_p_Display swig_types[13] 
#define  SWIGTYPE_p_p_XColor swig_types[14] 
#define  SWIGTYPE_p_XReparentEvent swig_types[15] 
#define  SWIGTYPE_p_otk__BPen swig_types[16] 
#define  SWIGTYPE_p_otk__BImageControl swig_types[17] 
#define  SWIGTYPE_p_otk__OtkButton swig_types[18] 
#define  SWIGTYPE_p_otk__Rect swig_types[19] 
#define  SWIGTYPE_p_otk__Style swig_types[20] 
#define  SWIGTYPE_p_XSelectionClearEvent swig_types[21] 
#define  SWIGTYPE_p_Visual swig_types[22] 
#define  SWIGTYPE_p_timeval swig_types[23] 
#define  SWIGTYPE_p_int swig_types[24] 
#define  SWIGTYPE_p_otk__Strut swig_types[25] 
#define  SWIGTYPE_p_otk__OtkApplication swig_types[26] 
#define  SWIGTYPE_p_XRectangle swig_types[27] 
#define  SWIGTYPE_p_otk__OtkFocusWidget swig_types[28] 
#define  SWIGTYPE_p_otk__OtkWidget swig_types[29] 
#define  SWIGTYPE_p_Cursor swig_types[30] 
#define  SWIGTYPE_p_Colormap swig_types[31] 
#define  SWIGTYPE_p_XGravityEvent swig_types[32] 
#define  SWIGTYPE_p_XVisibilityEvent swig_types[33] 
#define  SWIGTYPE_p_XPropertyEvent swig_types[34] 
#define  SWIGTYPE_p_Window swig_types[35] 
#define  SWIGTYPE_p_otk__BGCCacheContext swig_types[36] 
#define  SWIGTYPE_p_XCreateWindowEvent swig_types[37] 
#define  SWIGTYPE_p_XDestroyWindowEvent swig_types[38] 
#define  SWIGTYPE_p_Time swig_types[39] 
#define  SWIGTYPE_p_XCirculateEvent swig_types[40] 
#define  SWIGTYPE_p_XConfigureEvent swig_types[41] 
#define  SWIGTYPE_p_long swig_types[42] 
#define  SWIGTYPE_p_otk__OBProperty swig_types[43] 
#define  SWIGTYPE_p_XTextProperty swig_types[44] 
#define  SWIGTYPE_p_otk__OtkEventHandler swig_types[45] 
#define  SWIGTYPE_p_XSelectionRequestEvent swig_types[46] 
#define  SWIGTYPE_p_XCirculateRequestEvent swig_types[47] 
#define  SWIGTYPE_p_XConfigureRequestEvent swig_types[48] 
#define  SWIGTYPE_p_XMapRequestEvent swig_types[49] 
#define  SWIGTYPE_p_XResizeRequestEvent swig_types[50] 
#define  SWIGTYPE_otk__OBTimeoutHandler swig_types[51] 
#define  SWIGTYPE_p_XftDraw swig_types[52] 
#define  SWIGTYPE_p_otk__ScreenInfo swig_types[53] 
#define  SWIGTYPE_p_otk__OtkFocusLabel swig_types[54] 
#define  SWIGTYPE_p_otk__BTexture swig_types[55] 
#define  SWIGTYPE_p_otk__OtkEventDispatcher swig_types[56] 
#define  SWIGTYPE_p_otk__BFont swig_types[57] 
#define  SWIGTYPE_p_otk__Point swig_types[58] 
#define  SWIGTYPE_p_p_char swig_types[59] 
#define  SWIGTYPE_p_XMotionEvent swig_types[60] 
#define  SWIGTYPE_p_XButtonEvent swig_types[61] 
#define  SWIGTYPE_p_XSelectionEvent swig_types[62] 
#define  SWIGTYPE_p_Pixmap swig_types[63] 
#define  SWIGTYPE_p_GC swig_types[64] 
#define  SWIGTYPE_p_otk__OBTimerQueueManager swig_types[65] 
#define  SWIGTYPE_p_otk__OtkAppWidget swig_types[66] 
#define  SWIGTYPE_p_XKeyEvent swig_types[67] 
#define  SWIGTYPE_p_unsigned_long swig_types[68] 
#define  SWIGTYPE_p_XEvent swig_types[69] 
#define  SWIGTYPE_p_p_unsigned_long swig_types[70] 
#define  SWIGTYPE_p_std__string swig_types[71] 
#define  SWIGTYPE_p_XCrossingEvent swig_types[72] 
#define  SWIGTYPE_p_XMappingEvent swig_types[73] 
#define  SWIGTYPE_p_otk__BGCCacheItem swig_types[74] 
#define  SWIGTYPE_p_p_unsigned_int swig_types[75] 
#define  SWIGTYPE_p_unsigned_int swig_types[76] 
#define  SWIGTYPE_p_p_unsigned_char swig_types[77] 
#define  SWIGTYPE_p_XClientMessageEvent swig_types[78] 
#define  SWIGTYPE_p_XExposeEvent swig_types[79] 
#define  SWIGTYPE_p_XFocusChangeEvent swig_types[80] 
#define  SWIGTYPE_p_XGraphicsExposeEvent swig_types[81] 
#define  SWIGTYPE_p_XNoExposeEvent swig_types[82] 
#define  SWIGTYPE_p_XMapEvent swig_types[83] 
#define  SWIGTYPE_p_XUnmapEvent swig_types[84] 
#define  SWIGTYPE_p_XColormapEvent swig_types[85] 
static swig_type_info *swig_types[87];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _otk.so
  ------------------------------------------------*/
#define SWIG_init    init_otk

#define SWIG_name    "_otk"

#ifdef HAVE_CONFIG_H
#  include "../config.h"
#endif

#include "application.hh"
#include "appwidget.hh"
#include "assassin.hh"
#include "button.hh"
#include "color.hh"
#include "configuration.hh"
#include "display.hh"
#include "eventdispatcher.hh"
#include "eventhandler.hh"
#include "focuslabel.hh"
#include "focuswidget.hh"
#include "font.hh"
#include "gccache.hh"
#include "image.hh"
#include "label.hh"
#include "point.hh"
#include "property.hh"
#include "rect.hh"
#include "screeninfo.hh"
#include "strut.hh"
#include "style.hh"
#include "texture.hh"
#include "timer.hh"
#include "timerqueue.hh"
#include "timerqueuemanager.hh"
#include "util.hh"
#include "widget.hh"


#define  SWIG_MemoryError    1
#define  SWIG_IOError        2
#define  SWIG_RuntimeError   3
#define  SWIG_IndexError     4
#define  SWIG_TypeError      5
#define  SWIG_DivisionByZero 6
#define  SWIG_OverflowError  7
#define  SWIG_SyntaxError    8
#define  SWIG_ValueError     9
#define  SWIG_SystemError   10
#define  SWIG_UnknownError  99


static void _SWIG_exception(int code, const char *msg) {
  switch(code) {
  case SWIG_MemoryError:
    PyErr_SetString(PyExc_MemoryError,msg);
    break;
  case SWIG_IOError:
    PyErr_SetString(PyExc_IOError,msg);
    break;
  case SWIG_RuntimeError:
    PyErr_SetString(PyExc_RuntimeError,msg);
    break;
  case SWIG_IndexError:
    PyErr_SetString(PyExc_IndexError,msg);
    break;
  case SWIG_TypeError:
    PyErr_SetString(PyExc_TypeError,msg);
    break;
  case SWIG_DivisionByZero:
    PyErr_SetString(PyExc_ZeroDivisionError,msg);
    break;
  case SWIG_OverflowError:
    PyErr_SetString(PyExc_OverflowError,msg);
    break;
  case SWIG_SyntaxError:
    PyErr_SetString(PyExc_SyntaxError,msg);
    break;
  case SWIG_ValueError:
    PyErr_SetString(PyExc_ValueError,msg);
    break;
  case SWIG_SystemError:
    PyErr_SetString(PyExc_SystemError,msg);
    break;
  default:
    PyErr_SetString(PyExc_RuntimeError,msg);
    break;
  }
}

#define SWIG_exception(a,b) { _SWIG_exception(a,b); SWIG_fail; }


#include <string>


#include <string>

static PyObject* SwigInt_FromBool(bool b) {
    return PyInt_FromLong(b ? 1L : 0L);
}
static double SwigNumber_Check(PyObject* o) {
    return PyFloat_Check(o) || PyInt_Check(o);
}
static double SwigNumber_AsDouble(PyObject* o) {
    return (PyFloat_Check(o) ? PyFloat_AsDouble(o) : double(PyInt_AsLong(o)));
}
static PyObject* SwigString_FromString(const std::string& s) {
    return PyString_FromString(s.c_str());
}
static std::string SwigString_AsString(PyObject* o) {
    return std::string(PyString_AsString(o));
}


#include <vector>
#include <algorithm>
#include <stdexcept>

#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_new_OtkEventDispatcher(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_OtkEventDispatcher")) goto fail;
    result = (otk::OtkEventDispatcher *)new otk::OtkEventDispatcher();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkEventDispatcher, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OtkEventDispatcher(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OtkEventDispatcher",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_clearAllHandlers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkEventDispatcher_clearAllHandlers",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->clearAllHandlers();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_registerHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    Window arg2 ;
    otk::OtkEventHandler *arg3 = (otk::OtkEventHandler *) 0 ;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:OtkEventDispatcher_registerHandler",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->registerHandler(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_clearHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    Window arg2 ;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventDispatcher_clearHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->clearHandler(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_dispatchEvents(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkEventDispatcher_dispatchEvents",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->dispatchEvents();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_setFallbackHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    otk::OtkEventHandler *arg2 = (otk::OtkEventHandler *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventDispatcher_setFallbackHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setFallbackHandler(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_getFallbackHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    otk::OtkEventHandler *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkEventDispatcher_getFallbackHandler",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OtkEventHandler *)((otk::OtkEventDispatcher const *)arg1)->getFallbackHandler();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkEventHandler, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_setMasterHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    otk::OtkEventHandler *arg2 = (otk::OtkEventHandler *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventDispatcher_setMasterHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setMasterHandler(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_getMasterHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    otk::OtkEventHandler *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkEventDispatcher_getMasterHandler",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OtkEventHandler *)((otk::OtkEventDispatcher const *)arg1)->getMasterHandler();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkEventHandler, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_findHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    Window arg2 ;
    otk::OtkEventHandler *result;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventDispatcher_findHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (otk::OtkEventHandler *)(arg1)->findHandler(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkEventHandler, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventDispatcher_lastTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    Time result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkEventDispatcher_lastTime",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::OtkEventDispatcher const *)arg1)->lastTime();
    
    {
        Time * resultptr;
        resultptr = new Time((Time &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Time, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OtkEventDispatcher_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OtkEventDispatcher, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_OtkEventHandler_handle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_handle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->handle((XEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_keyPressHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XKeyEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_keyPressHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->keyPressHandler((XKeyEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_keyReleaseHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XKeyEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_keyReleaseHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XKeyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->keyReleaseHandler((XKeyEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_buttonPressHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XButtonEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_buttonPressHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XButtonEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->buttonPressHandler((XButtonEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_buttonReleaseHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XButtonEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_buttonReleaseHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XButtonEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->buttonReleaseHandler((XButtonEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_motionHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XMotionEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_motionHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XMotionEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->motionHandler((XMotionEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_enterHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XCrossingEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_enterHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XCrossingEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->enterHandler((XCrossingEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_leaveHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XCrossingEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_leaveHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XCrossingEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->leaveHandler((XCrossingEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_focusHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XFocusChangeEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_focusHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XFocusChangeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->focusHandler((XFocusChangeEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_unfocusHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XFocusChangeEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_unfocusHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XFocusChangeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->unfocusHandler((XFocusChangeEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_exposeHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XExposeEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_exposeHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XExposeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->exposeHandler((XExposeEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_graphicsExposeHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XGraphicsExposeEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_graphicsExposeHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XGraphicsExposeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->graphicsExposeHandler((XGraphicsExposeEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_noExposeEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XNoExposeEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_noExposeEventHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XNoExposeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->noExposeEventHandler((XNoExposeEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_circulateRequestHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XCirculateRequestEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_circulateRequestHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XCirculateRequestEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->circulateRequestHandler((XCirculateRequestEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_configureRequestHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XConfigureRequestEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_configureRequestHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XConfigureRequestEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->configureRequestHandler((XConfigureRequestEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_mapRequestHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XMapRequestEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_mapRequestHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XMapRequestEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mapRequestHandler((XMapRequestEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_resizeRequestHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XResizeRequestEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_resizeRequestHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XResizeRequestEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->resizeRequestHandler((XResizeRequestEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_circulateHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XCirculateEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_circulateHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XCirculateEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->circulateHandler((XCirculateEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_configureHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XConfigureEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_configureHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XConfigureEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->configureHandler((XConfigureEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_createHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XCreateWindowEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_createHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XCreateWindowEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->createHandler((XCreateWindowEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_destroyHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XDestroyWindowEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_destroyHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XDestroyWindowEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->destroyHandler((XDestroyWindowEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_gravityHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XGravityEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_gravityHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XGravityEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->gravityHandler((XGravityEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_mapHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XMapEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_mapHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XMapEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mapHandler((XMapEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_mappingHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XMappingEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_mappingHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XMappingEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->mappingHandler((XMappingEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_reparentHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XReparentEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_reparentHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XReparentEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->reparentHandler((XReparentEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_unmapHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XUnmapEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_unmapHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XUnmapEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->unmapHandler((XUnmapEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_visibilityHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XVisibilityEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_visibilityHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XVisibilityEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->visibilityHandler((XVisibilityEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_colorMapHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XColormapEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_colorMapHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XColormapEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->colorMapHandler((XColormapEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_propertyHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XPropertyEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_propertyHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XPropertyEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->propertyHandler((XPropertyEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_selectionClearHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XSelectionClearEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_selectionClearHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XSelectionClearEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->selectionClearHandler((XSelectionClearEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_selectionHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XSelectionEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_selectionHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XSelectionEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->selectionHandler((XSelectionEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_selectionRequestHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XSelectionRequestEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_selectionRequestHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XSelectionRequestEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->selectionRequestHandler((XSelectionRequestEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkEventHandler_clientMessageHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    XClientMessageEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkEventHandler_clientMessageHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XClientMessageEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->clientMessageHandler((XClientMessageEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OtkEventHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventHandler *arg1 = (otk::OtkEventHandler *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OtkEventHandler",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OtkEventHandler_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OtkEventHandler, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OtkWidget__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 = (int) otk::OtkWidget::Horizontal ;
    otk::OtkWidget *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:new_OtkWidget",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OtkWidget *)new otk::OtkWidget(arg1,(otk::OtkWidget::Direction )arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkWidget, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_OtkWidget__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkEventDispatcher *arg1 = (otk::OtkEventDispatcher *) 0 ;
    otk::Style *arg2 = (otk::Style *) 0 ;
    int arg3 = (int) otk::OtkWidget::Horizontal ;
    Cursor arg4 = (Cursor) 0 ;
    int arg5 = (int) 1 ;
    bool arg6 = (bool) false ;
    otk::OtkWidget *result;
    Cursor *argp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|iOiO:new_OtkWidget",&obj0,&obj1,&arg3,&obj3,&arg5,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &argp4, SWIGTYPE_p_Cursor,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
        arg4 = *argp4; 
    }
    if (obj5) {
        arg6 = (bool) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (otk::OtkWidget *)new otk::OtkWidget(arg1,arg2,(otk::OtkWidget::Direction )arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkWidget, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_OtkWidget(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OtkWidget, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_OtkWidget__SWIG_0(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_OtkWidget__SWIG_0(self,args);
            }
        }
    }
    if ((argc >= 2) && (argc <= 6)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OtkEventDispatcher, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Style, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_new_OtkWidget__SWIG_1(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_new_OtkWidget__SWIG_1(self,args);
                    }
                    {
                        void *ptr;
                        if (SWIG_ConvertPtr(argv[3], (void **) &ptr, SWIGTYPE_p_Cursor, 0) == -1) {
                            _v = 0;
                            PyErr_Clear();
                        }else {
                            _v = 1;
                        }
                    }
                    if (_v) {
                        if (argc <= 4) {
                            return _wrap_new_OtkWidget__SWIG_1(self,args);
                        }
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            if (argc <= 5) {
                                return _wrap_new_OtkWidget__SWIG_1(self,args);
                            }
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_new_OtkWidget__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_OtkWidget'");
    return NULL;
}


static PyObject *_wrap_delete_OtkWidget(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OtkWidget",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_update(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_update",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->update();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_exposeHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    XExposeEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_exposeHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XExposeEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->exposeHandler((XExposeEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_configureHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    XConfigureEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_configureHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XConfigureEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->configureHandler((XConfigureEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_window(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    Window result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_window",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::OtkWidget const *)arg1)->window();
    
    {
        Window * resultptr;
        resultptr = new Window((Window &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Window, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_parent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::OtkWidget *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_parent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OtkWidget *)((otk::OtkWidget const *)arg1)->parent();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkWidget, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_children(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::OtkWidget::OtkWidgetList *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_children",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        otk::OtkWidget::OtkWidgetList const &_result_ref = ((otk::OtkWidget const *)arg1)->children();
        result = (otk::OtkWidget::OtkWidgetList *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkWidget__OtkWidgetList, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_screen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_screen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::OtkWidget const *)arg1)->screen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_rect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::Rect *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_rect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        otk::Rect const &_result_ref = ((otk::OtkWidget const *)arg1)->rect();
        result = (otk::Rect *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Rect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_move__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::Point *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_move",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->move((otk::Point const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_move__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:OtkWidget_move",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->move(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_move(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OtkWidget, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_OtkWidget_move__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OtkWidget, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_OtkWidget_move__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'OtkWidget_move'");
    return NULL;
}


static PyObject *_wrap_OtkWidget_setWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:OtkWidget_setWidth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setWidth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:OtkWidget_setHeight",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setHeight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_width(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_width",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::OtkWidget const *)arg1)->width();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_height(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_height",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::OtkWidget const *)arg1)->height();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_resize__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::Point *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_resize",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->resize((otk::Point const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_resize__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:OtkWidget_resize",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->resize(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_resize(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OtkWidget, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_OtkWidget_resize__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OtkWidget, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_OtkWidget_resize__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'OtkWidget_resize'");
    return NULL;
}


static PyObject *_wrap_OtkWidget_setGeometry__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::Rect *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_setGeometry",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setGeometry((otk::Rect const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setGeometry__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::Point *arg2 = 0 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOii:OtkWidget_setGeometry",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setGeometry((otk::Point const &)*arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setGeometry__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:OtkWidget_setGeometry",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setGeometry(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setGeometry(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OtkWidget, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_OtkWidget_setGeometry__SWIG_0(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OtkWidget, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_OtkWidget_setGeometry__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OtkWidget, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_OtkWidget_setGeometry__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'OtkWidget_setGeometry'");
    return NULL;
}


static PyObject *_wrap_OtkWidget_isVisible(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_isVisible",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkWidget const *)arg1)->isVisible();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_show(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool arg2 = (bool) false ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:OtkWidget_show",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = (bool) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->show(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_hide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool arg2 = (bool) false ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:OtkWidget_hide",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = (bool) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->hide(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_isFocused(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_isFocused",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkWidget const *)arg1)->isFocused();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_focus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_focus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->focus();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_unfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_unfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->unfocus();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_hasGrabbedMouse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_hasGrabbedMouse",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkWidget const *)arg1)->hasGrabbedMouse();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_grabMouse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_grabMouse",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->grabMouse();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_ungrabMouse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_ungrabMouse",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ungrabMouse();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_hasGrabbedKeyboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_hasGrabbedKeyboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkWidget const *)arg1)->hasGrabbedKeyboard();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_grabKeyboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_grabKeyboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->grabKeyboard();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_ungrabKeyboard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_ungrabKeyboard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ungrabKeyboard();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_texture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_texture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)((otk::OtkWidget const *)arg1)->texture();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_setTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_borderColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_borderColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)((otk::OtkWidget const *)arg1)->borderColor();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setBorderColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::BColor *arg2 = (otk::BColor *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_setBorderColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setBorderColor((otk::BColor const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_borderWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_borderWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::OtkWidget const *)arg1)->borderWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setBorderWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:OtkWidget_setBorderWidth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setBorderWidth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_addChild(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::OtkWidget *arg2 = (otk::OtkWidget *) 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:OtkWidget_addChild",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (bool) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->addChild(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_removeChild(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::OtkWidget *arg2 = (otk::OtkWidget *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_removeChild",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->removeChild(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_isStretchableHorz(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_isStretchableHorz",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkWidget const *)arg1)->isStretchableHorz();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setStretchableHorz(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool arg2 = (bool) true ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:OtkWidget_setStretchableHorz",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = (bool) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->setStretchableHorz(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_isStretchableVert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_isStretchableVert",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkWidget const *)arg1)->isStretchableVert();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setStretchableVert(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    bool arg2 = (bool) true ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:OtkWidget_setStretchableVert",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = (bool) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->setStretchableVert(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_cursor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    Cursor result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_cursor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::OtkWidget const *)arg1)->cursor();
    
    {
        Cursor * resultptr;
        resultptr = new Cursor((Cursor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Cursor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setCursor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    Cursor arg2 ;
    Cursor *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_setCursor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Cursor,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->setCursor(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_bevelWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_bevelWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::OtkWidget const *)arg1)->bevelWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setBevelWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:OtkWidget_setBevelWidth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setBevelWidth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_direction(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_direction",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::OtkWidget const *)arg1)->direction();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setDirection(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:OtkWidget_setDirection",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setDirection((otk::OtkWidget::Direction )arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_style(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::Style *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_style",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::Style *)((otk::OtkWidget const *)arg1)->style();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Style, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setStyle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::Style *arg2 = (otk::Style *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_setStyle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setStyle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_eventDispatcher(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::OtkEventDispatcher *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkWidget_eventDispatcher",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OtkEventDispatcher *)(arg1)->eventDispatcher();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkEventDispatcher, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkWidget_setEventDispatcher(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::OtkEventDispatcher *arg2 = (otk::OtkEventDispatcher *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkWidget_setEventDispatcher",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__OtkEventDispatcher,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setEventDispatcher(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OtkWidget_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OtkWidget, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OtkFocusWidget(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    int arg2 = (int) otk::OtkWidget::Horizontal ;
    otk::OtkFocusWidget *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|i:new_OtkFocusWidget",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OtkFocusWidget *)new otk::OtkFocusWidget(arg1,(otk::OtkWidget::Direction )arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkFocusWidget, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OtkFocusWidget(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OtkFocusWidget",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_focus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkFocusWidget_focus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->focus();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_unfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkFocusWidget_unfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->unfocus();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_setTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkFocusWidget_setTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_setBorderColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    otk::BColor *arg2 = (otk::BColor *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkFocusWidget_setBorderColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setBorderColor((otk::BColor const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_setUnfocusTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkFocusWidget_setUnfocusTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setUnfocusTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_getUnfocusTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkFocusWidget_getUnfocusTexture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)((otk::OtkFocusWidget const *)arg1)->getUnfocusTexture();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_setUnfocusBorderColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    otk::BColor *arg2 = (otk::BColor *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkFocusWidget_setUnfocusBorderColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setUnfocusBorderColor((otk::BColor const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_getUnfocusBorderColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkFocusWidget_getUnfocusBorderColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)((otk::OtkFocusWidget const *)arg1)->getUnfocusBorderColor();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_isFocused(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkFocusWidget_isFocused",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkFocusWidget const *)arg1)->isFocused();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusWidget_isUnfocused(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusWidget *arg1 = (otk::OtkFocusWidget *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkFocusWidget_isUnfocused",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkFocusWidget const *)arg1)->isUnfocused();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OtkFocusWidget_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OtkFocusWidget, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OtkFocusLabel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::OtkFocusLabel *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_OtkFocusLabel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OtkFocusLabel *)new otk::OtkFocusLabel(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkFocusLabel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OtkFocusLabel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusLabel *arg1 = (otk::OtkFocusLabel *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OtkFocusLabel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusLabel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusLabel_getText(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusLabel *arg1 = (otk::OtkFocusLabel *) 0 ;
    std::string *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkFocusLabel_getText",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusLabel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::string const &_result_ref = ((otk::OtkFocusLabel const *)arg1)->getText();
        result = (std::string *) &_result_ref;
    }
    
    {
        resultobj = PyString_FromString(result->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusLabel_setText(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusLabel *arg1 = (otk::OtkFocusLabel *) 0 ;
    std::string *arg2 = 0 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkFocusLabel_setText",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusLabel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->setText((std::string const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusLabel_update(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusLabel *arg1 = (otk::OtkFocusLabel *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkFocusLabel_update",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusLabel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->update();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkFocusLabel_setStyle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkFocusLabel *arg1 = (otk::OtkFocusLabel *) 0 ;
    otk::Style *arg2 = (otk::Style *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkFocusLabel_setStyle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkFocusLabel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setStyle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OtkFocusLabel_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OtkFocusLabel, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OtkAppWidget(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkApplication *arg1 = (otk::OtkApplication *) 0 ;
    int arg2 = (int) otk::OtkWidget::Horizontal ;
    Cursor arg3 = (Cursor) 0 ;
    int arg4 = (int) 1 ;
    otk::OtkAppWidget *result;
    Cursor *argp3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|iOi:new_OtkAppWidget",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkApplication,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_Cursor,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
        arg3 = *argp3; 
    }
    result = (otk::OtkAppWidget *)new otk::OtkAppWidget(arg1,(otk::OtkWidget::Direction )arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkAppWidget, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OtkAppWidget(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkAppWidget *arg1 = (otk::OtkAppWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OtkAppWidget",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkAppWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkAppWidget_show(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkAppWidget *arg1 = (otk::OtkAppWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkAppWidget_show",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkAppWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->show();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkAppWidget_hide(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkAppWidget *arg1 = (otk::OtkAppWidget *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkAppWidget_hide",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkAppWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->hide();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkAppWidget_clientMessageHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkAppWidget *arg1 = (otk::OtkAppWidget *) 0 ;
    XClientMessageEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkAppWidget_clientMessageHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkAppWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XClientMessageEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->clientMessageHandler((XClientMessageEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OtkAppWidget_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OtkAppWidget, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OtkApplication(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    char **arg2 = (char **) 0 ;
    otk::OtkApplication *result;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iO:new_OtkApplication",&arg1,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OtkApplication *)new otk::OtkApplication(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkApplication, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OtkApplication(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkApplication *arg1 = (otk::OtkApplication *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OtkApplication",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkApplication,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkApplication_run(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkApplication *arg1 = (otk::OtkApplication *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkApplication_run",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkApplication,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->run();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkApplication_setDockable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkApplication *arg1 = (otk::OtkApplication *) 0 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkApplication_setDockable",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkApplication,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setDockable(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkApplication_isDockable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkApplication *arg1 = (otk::OtkApplication *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkApplication_isDockable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkApplication,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkApplication const *)arg1)->isDockable();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkApplication_getStyle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkApplication *arg1 = (otk::OtkApplication *) 0 ;
    otk::Style *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkApplication_getStyle",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkApplication,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::Style *)((otk::OtkApplication const *)arg1)->getStyle();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Style, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OtkApplication_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OtkApplication, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_PointerAssassin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PointerAssassin *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_PointerAssassin")) goto fail;
    result = (otk::PointerAssassin *)new otk::PointerAssassin();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PointerAssassin, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PointerAssassin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PointerAssassin *arg1 = (otk::PointerAssassin *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_PointerAssassin",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__PointerAssassin,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PointerAssassin_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__PointerAssassin, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OtkButton(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkWidget *arg1 = (otk::OtkWidget *) 0 ;
    otk::OtkButton *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_OtkButton",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkWidget,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OtkButton *)new otk::OtkButton(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OtkButton, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OtkButton(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OtkButton",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_getPressedFocusTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkButton_getPressedFocusTexture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)((otk::OtkButton const *)arg1)->getPressedFocusTexture();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_setPressedFocusTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkButton_setPressedFocusTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setPressedFocusTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_getPressedUnfocusTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkButton_getPressedUnfocusTexture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)((otk::OtkButton const *)arg1)->getPressedUnfocusTexture();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_setPressedUnfocusTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkButton_setPressedUnfocusTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setPressedUnfocusTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_setTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkButton_setTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_setUnfocusTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkButton_setUnfocusTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setUnfocusTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_isPressed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OtkButton_isPressed",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OtkButton const *)arg1)->isPressed();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_press(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkButton_press",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->press(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_release(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkButton_release",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->release(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_buttonPressHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    XButtonEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkButton_buttonPressHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XButtonEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->buttonPressHandler((XButtonEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_buttonReleaseHandler(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    XButtonEvent *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkButton_buttonReleaseHandler",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XButtonEvent,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->buttonReleaseHandler((XButtonEvent const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OtkButton_setStyle(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OtkButton *arg1 = (otk::OtkButton *) 0 ;
    otk::Style *arg2 = (otk::Style *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OtkButton_setStyle",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OtkButton,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setStyle(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OtkButton_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OtkButton, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_BColor__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int arg1 = (unsigned int) ~(0u) ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:new_BColor",&obj0)) goto fail;
    if (obj0) {
        arg1 = (unsigned int) PyInt_AsLong(obj0);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (otk::BColor *)new otk::BColor(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_BColor__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    unsigned int arg4 = (unsigned int) ~(0u) ;
    otk::BColor *result;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iii|O:new_BColor",&arg1,&arg2,&arg3,&obj3)) goto fail;
    if (obj3) {
        arg4 = (unsigned int) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (otk::BColor *)new otk::BColor(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_BColor__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string *arg1 = 0 ;
    unsigned int arg2 = (unsigned int) ~(0u) ;
    otk::BColor *result;
    std::string temp1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:new_BColor",&obj0,&obj1)) goto fail;
    {
        if (PyString_Check(obj0)) {
            temp1 = std::string(PyString_AsString(obj0));
            arg1 = &temp1;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if (obj1) {
        arg2 = (unsigned int) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (otk::BColor *)new otk::BColor((std::string const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_BColor(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 0) && (argc <= 1)) {
        int _v;
        if (argc <= 0) {
            return _wrap_new_BColor__SWIG_0(self,args);
        }
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_BColor__SWIG_0(self,args);
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_BColor__SWIG_2(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_BColor__SWIG_2(self,args);
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_new_BColor__SWIG_1(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_new_BColor__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_BColor'");
    return NULL;
}


static PyObject *_wrap_delete_BColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    std::string *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BColor_name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::string const &_result_ref = ((otk::BColor const *)arg1)->name();
        result = (std::string *) &_result_ref;
    }
    
    {
        resultobj = PyString_FromString(result->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_red(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BColor_red",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::BColor const *)arg1)->red();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_green(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BColor_green",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::BColor const *)arg1)->green();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_blue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BColor_blue",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::BColor const *)arg1)->blue();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_setRGB(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiii:BColor_setRGB",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setRGB(arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_screen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BColor_screen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::BColor const *)arg1)->screen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_setScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    unsigned int arg2 = (unsigned int) ~(0u) ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:BColor_setScreen",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = (unsigned int) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->setScreen(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_isAllocated(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BColor_isAllocated",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::BColor const *)arg1)->isAllocated();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_isValid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BColor_isValid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::BColor const *)arg1)->isValid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_pixel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    unsigned long result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BColor_pixel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((otk::BColor const *)arg1)->pixel();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_equals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = (otk::BColor *) 0 ;
    otk::BColor *arg2 = 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BColor_equals",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::BColor const *)arg1)->operator ==((otk::BColor const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BColor_cleanupColorCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    
    if(!PyArg_ParseTuple(args,(char *)":BColor_cleanupColorCache")) goto fail;
    otk::BColor::cleanupColorCache();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BColor_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__BColor, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Configuration__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string *arg1 = 0 ;
    bool arg2 = (bool) True ;
    otk::Configuration *result;
    std::string temp1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:new_Configuration",&obj0,&obj1)) goto fail;
    {
        if (PyString_Check(obj0)) {
            temp1 = std::string(PyString_AsString(obj0));
            arg1 = &temp1;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if (obj1) {
        arg2 = (bool) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (otk::Configuration *)new otk::Configuration((std::string const &)*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Configuration, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Configuration__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bool arg1 = (bool) True ;
    otk::Configuration *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:new_Configuration",&obj0)) goto fail;
    if (obj0) {
        arg1 = (bool) PyInt_AsLong(obj0);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (otk::Configuration *)new otk::Configuration(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Configuration, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Configuration(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 0) && (argc <= 1)) {
        int _v;
        if (argc <= 0) {
            return _wrap_new_Configuration__SWIG_1(self,args);
        }
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_Configuration__SWIG_1(self,args);
        }
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_Configuration__SWIG_0(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_Configuration__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Configuration'");
    return NULL;
}


static PyObject *_wrap_delete_Configuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Configuration",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_file(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Configuration_file",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::string const &_result_ref = ((otk::Configuration const *)arg1)->file();
        result = (std::string *) &_result_ref;
    }
    
    {
        resultobj = PyString_FromString(result->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_setFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Configuration_setFile",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->setFile((std::string const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_autoSave(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Configuration_autoSave",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::Configuration const *)arg1)->autoSave();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_setAutoSave(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Configuration_setAutoSave",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setAutoSave(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_isModified(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Configuration_isModified",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::Configuration const *)arg1)->isModified();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_save(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Configuration_save",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->save();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Configuration_load",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->load();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_merge(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 = (bool) False ;
    bool result;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:Configuration_merge",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if (obj2) {
        arg3 = (bool) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->merge((std::string const &)*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_create(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Configuration_create",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->create();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_setValue_bool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_setValue_bool",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setValue((std::string const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_setValue(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    int arg3 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:Configuration_setValue",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->setValue((std::string const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_setValue_unsigned(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    unsigned int arg3 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_setValue_unsigned",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    arg3 = (unsigned int) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setValue((std::string const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_setValue_long(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    long arg3 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOl:Configuration_setValue_long",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->setValue((std::string const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_setValue_unsignedlong(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    unsigned long arg3 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_setValue_unsignedlong",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    arg3 = (unsigned long) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setValue((std::string const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_setValue_string(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    std::string temp2 ;
    std::string temp3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_setValue_string",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    {
        if (PyString_Check(obj2)) {
            temp3 = std::string(PyString_AsString(obj2));
            arg3 = &temp3;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->setValue((std::string const &)*arg2,(std::string const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_setValue_charptr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    char *arg3 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:Configuration_setValue_charptr",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->setValue((std::string const &)*arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_getValue__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    bool *arg3 = 0 ;
    bool result;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_getValue",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_bool,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::Configuration const *)arg1)->getValue((std::string const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_getValue__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    int *arg3 = 0 ;
    bool result;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_getValue",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::Configuration const *)arg1)->getValue((std::string const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_getValue__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    unsigned int *arg3 = 0 ;
    bool result;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_getValue",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_unsigned_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::Configuration const *)arg1)->getValue((std::string const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_getValue__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    long *arg3 = 0 ;
    bool result;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_getValue",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::Configuration const *)arg1)->getValue((std::string const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_getValue__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    unsigned long *arg3 = 0 ;
    bool result;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_getValue",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_unsigned_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::Configuration const *)arg1)->getValue((std::string const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_getValue__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Configuration *arg1 = (otk::Configuration *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool result;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_getValue",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_std__string,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::Configuration const *)arg1)->getValue((std::string const &)*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_getValue(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_bool, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Configuration_getValue__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Configuration_getValue__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_unsigned_int, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Configuration_getValue__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_long, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Configuration_getValue__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_unsigned_long, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Configuration_getValue__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Configuration_getValue__SWIG_5(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Configuration_getValue'");
    return NULL;
}


static PyObject * Configuration_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__Configuration, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_OBDisplay_display_set(PyObject *_val) {
    {
        void *temp;
        if ((SWIG_ConvertPtr(_val,(void **) &temp, SWIGTYPE_p_Display, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN)) == -1) {
            PyErr_SetString(PyExc_TypeError, "C variable 'otk::OBDisplay::display (Display *)'");
            return 1;
        }
        otk::OBDisplay::display = (Display *) temp;
    }
    return 0;
}


static PyObject *_wrap_OBDisplay_display_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) otk::OBDisplay::display, SWIGTYPE_p_Display, 0);
    return pyobj;
}


static PyObject *_wrap_OBDisplay_initialize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    
    if(!PyArg_ParseTuple(args,(char *)"s:OBDisplay_initialize",&arg1)) goto fail;
    otk::OBDisplay::initialize(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_destroy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    
    if(!PyArg_ParseTuple(args,(char *)":OBDisplay_destroy")) goto fail;
    otk::OBDisplay::destroy();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_gcCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCache *result;
    
    if(!PyArg_ParseTuple(args,(char *)":OBDisplay_gcCache")) goto fail;
    result = (otk::BGCCache *)otk::OBDisplay::gcCache();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BGCCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_screenInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    otk::ScreenInfo *result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:OBDisplay_screenInfo",&arg1)) goto fail;
    result = (otk::ScreenInfo *)otk::OBDisplay::screenInfo(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__ScreenInfo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_findScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Window arg1 ;
    otk::ScreenInfo *result;
    Window *argp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBDisplay_findScreen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &argp1, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg1 = *argp1; 
    result = (otk::ScreenInfo *)otk::OBDisplay::findScreen(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__ScreenInfo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_shape(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bool result;
    
    if(!PyArg_ParseTuple(args,(char *)":OBDisplay_shape")) goto fail;
    result = (bool)otk::OBDisplay::shape();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_shapeEventBase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int result;
    
    if(!PyArg_ParseTuple(args,(char *)":OBDisplay_shapeEventBase")) goto fail;
    result = (int)otk::OBDisplay::shapeEventBase();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_xinerama(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bool result;
    
    if(!PyArg_ParseTuple(args,(char *)":OBDisplay_xinerama")) goto fail;
    result = (bool)otk::OBDisplay::xinerama();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_numLockMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int result;
    
    if(!PyArg_ParseTuple(args,(char *)":OBDisplay_numLockMask")) goto fail;
    result = (unsigned int)otk::OBDisplay::numLockMask();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_scrollLockMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int result;
    
    if(!PyArg_ParseTuple(args,(char *)":OBDisplay_scrollLockMask")) goto fail;
    result = (unsigned int)otk::OBDisplay::scrollLockMask();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_grab(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    
    if(!PyArg_ParseTuple(args,(char *)":OBDisplay_grab")) goto fail;
    otk::OBDisplay::grab();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_ungrab(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    
    if(!PyArg_ParseTuple(args,(char *)":OBDisplay_ungrab")) goto fail;
    otk::OBDisplay::ungrab();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_grabButton(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int arg1 ;
    unsigned int arg2 ;
    Window arg3 ;
    bool arg4 ;
    unsigned int arg5 ;
    int arg6 ;
    int arg7 ;
    Window arg8 ;
    Cursor arg9 ;
    bool arg10 ;
    Window *argp3 ;
    Window *argp8 ;
    Cursor *argp9 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    PyObject * obj9  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOiiOOO:OBDisplay_grabButton",&obj0,&obj1,&obj2,&obj3,&obj4,&arg6,&arg7,&obj7,&obj8,&obj9)) goto fail;
    arg1 = (unsigned int) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    arg4 = (bool) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    arg5 = (unsigned int) PyInt_AsLong(obj4);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj7,(void **) &argp8, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg8 = *argp8; 
    if ((SWIG_ConvertPtr(obj8,(void **) &argp9, SWIGTYPE_p_Cursor,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg9 = *argp9; 
    arg10 = (bool) PyInt_AsLong(obj9);
    if (PyErr_Occurred()) SWIG_fail;
    otk::OBDisplay::grabButton(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_ungrabButton(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int arg1 ;
    unsigned int arg2 ;
    Window arg3 ;
    Window *argp3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:OBDisplay_ungrabButton",&obj0,&obj1,&obj2)) goto fail;
    arg1 = (unsigned int) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    otk::OBDisplay::ungrabButton(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_grabKey(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int arg1 ;
    unsigned int arg2 ;
    Window arg3 ;
    bool arg4 ;
    int arg5 ;
    int arg6 ;
    bool arg7 ;
    Window *argp3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOiiO:OBDisplay_grabKey",&obj0,&obj1,&obj2,&obj3,&arg5,&arg6,&obj6)) goto fail;
    arg1 = (unsigned int) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    arg4 = (bool) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    arg7 = (bool) PyInt_AsLong(obj6);
    if (PyErr_Occurred()) SWIG_fail;
    otk::OBDisplay::grabKey(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBDisplay_ungrabKey(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int arg1 ;
    unsigned int arg2 ;
    Window arg3 ;
    Window *argp3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:OBDisplay_ungrabKey",&obj0,&obj1,&obj2)) goto fail;
    arg1 = (unsigned int) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    otk::OBDisplay::ungrabKey(arg1,arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OBDisplay(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBDisplay *arg1 = (otk::OBDisplay *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OBDisplay",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBDisplay,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OBDisplay_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OBDisplay, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_BFont_fallbackFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string result;
    
    if(!PyArg_ParseTuple(args,(char *)":BFont_fallbackFont")) goto fail;
    result = otk::BFont::fallbackFont();
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BFont_setFallbackFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string *arg1 = 0 ;
    std::string temp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BFont_setFallbackFont",&obj0)) goto fail;
    {
        if (PyString_Check(obj0)) {
            temp1 = std::string(PyString_AsString(obj0));
            arg1 = &temp1;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    otk::BFont::setFallbackFont((std::string const &)*arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_BFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    unsigned char arg4 ;
    unsigned char arg5 ;
    otk::BFont *result;
    std::string temp2 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"iOOOO:new_BFont",&arg1,&obj1,&obj2,&obj3,&obj4)) goto fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    arg3 = (bool) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (unsigned char) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    arg5 = (unsigned char) PyInt_AsLong(obj4);
    if (PyErr_Occurred()) SWIG_fail;
    result = (otk::BFont *)new otk::BFont(arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BFont, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_BFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BFont *arg1 = (otk::BFont *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BFont",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BFont_fontstring(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BFont *arg1 = (otk::BFont *) 0 ;
    std::string *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BFont_fontstring",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::string const &_result_ref = ((otk::BFont const *)arg1)->fontstring();
        result = (std::string *) &_result_ref;
    }
    
    {
        resultobj = PyString_FromString(result->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BFont_height(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BFont *arg1 = (otk::BFont *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BFont_height",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::BFont const *)arg1)->height();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BFont_maxCharWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BFont *arg1 = (otk::BFont *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BFont_maxCharWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::BFont const *)arg1)->maxCharWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BFont_measureString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BFont *arg1 = (otk::BFont *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 = (bool) false ;
    unsigned int result;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:BFont_measureString",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if (obj2) {
        arg3 = (bool) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (unsigned int)((otk::BFont const *)arg1)->measureString((std::string const &)*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BFont_drawString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BFont *arg1 = (otk::BFont *) 0 ;
    XftDraw *arg2 = (XftDraw *) 0 ;
    int arg3 ;
    int arg4 ;
    otk::BColor *arg5 = 0 ;
    std::string *arg6 = 0 ;
    bool arg7 = (bool) false ;
    std::string temp6 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiOO|O:BFont_drawString",&obj0,&obj1,&arg3,&arg4,&obj4,&obj5,&obj6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BFont,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XftDraw,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        if (PyString_Check(obj5)) {
            temp6 = std::string(PyString_AsString(obj5));
            arg6 = &temp6;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if (obj6) {
        arg7 = (bool) PyInt_AsLong(obj6);
        if (PyErr_Occurred()) SWIG_fail;
    }
    ((otk::BFont const *)arg1)->drawString(arg2,arg3,arg4,(otk::BColor const &)*arg5,(std::string const &)*arg6,arg7);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BFont_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__BFont, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_BGCCacheContext_set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCacheContext *arg1 = (otk::BGCCacheContext *) 0 ;
    otk::BColor *arg2 = 0 ;
    XFontStruct *arg3 = (XFontStruct *) (XFontStruct *)0 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOiii:BGCCacheContext_set",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BGCCacheContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_XFontStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->set((otk::BColor const &)*arg2,(XFontStruct const *)arg3,arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BGCCacheContext_set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCacheContext *arg1 = (otk::BGCCacheContext *) 0 ;
    XFontStruct *arg2 = (XFontStruct *) (XFontStruct *)0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BGCCacheContext_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BGCCacheContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XFontStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->set((XFontStruct const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BGCCacheContext_set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__BGCCacheContext, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_XFontStruct, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_BGCCacheContext_set__SWIG_1(self,args);
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__BGCCacheContext, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__BColor, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_XFontStruct, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_BGCCacheContext_set__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'BGCCacheContext_set'");
    return NULL;
}


static PyObject *_wrap_delete_BGCCacheContext(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCacheContext *arg1 = (otk::BGCCacheContext *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BGCCacheContext",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BGCCacheContext,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BGCCacheContext_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__BGCCacheContext, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_BGCCacheItem_gc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCacheItem *arg1 = (otk::BGCCacheItem *) 0 ;
    GC *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BGCCacheItem_gc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BGCCacheItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        GC const &_result_ref = ((otk::BGCCacheItem const *)arg1)->gc();
        result = (GC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_GC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_BGCCacheItem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCacheItem *arg1 = (otk::BGCCacheItem *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BGCCacheItem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BGCCacheItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BGCCacheItem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__BGCCacheItem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_BGCCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int arg1 ;
    otk::BGCCache *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_BGCCache",&obj0)) goto fail;
    arg1 = (unsigned int) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = (otk::BGCCache *)new otk::BGCCache(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BGCCache, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_BGCCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCache *arg1 = (otk::BGCCache *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BGCCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BGCCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BGCCache_purge(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCache *arg1 = (otk::BGCCache *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BGCCache_purge",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BGCCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->purge();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BGCCache_find(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCache *arg1 = (otk::BGCCache *) 0 ;
    otk::BColor *arg2 = 0 ;
    XFontStruct *arg3 = (XFontStruct *) (XFontStruct *)0 ;
    int arg4 = (int) GXcopy ;
    int arg5 = (int) ClipByChildren ;
    int arg6 = (int) 0 ;
    otk::BGCCacheItem *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|Oiii:BGCCache_find",&obj0,&obj1,&obj2,&arg4,&arg5,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BGCCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_XFontStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (otk::BGCCacheItem *)(arg1)->find((otk::BColor const &)*arg2,(XFontStruct const *)arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BGCCacheItem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BGCCache_release(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BGCCache *arg1 = (otk::BGCCache *) 0 ;
    otk::BGCCacheItem *arg2 = (otk::BGCCacheItem *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BGCCache_release",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BGCCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BGCCacheItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->release(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BGCCache_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__BGCCache, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_BPen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BColor *arg1 = 0 ;
    XFontStruct *arg2 = (XFontStruct *) (XFontStruct *)0 ;
    int arg3 = (int) 0 ;
    int arg4 = (int) GXcopy ;
    int arg5 = (int) ClipByChildren ;
    otk::BPen *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|Oiii:new_BPen",&obj0,&obj1,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XFontStruct,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (otk::BPen *)new otk::BPen((otk::BColor const &)*arg1,(XFontStruct const *)arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BPen, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_BPen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BPen *arg1 = (otk::BPen *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BPen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BPen,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BPen_gc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BPen *arg1 = (otk::BPen *) 0 ;
    GC *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BPen_gc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BPen,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        GC const &_result_ref = ((otk::BPen const *)arg1)->gc();
        result = (GC *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_GC, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BPen_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__BPen, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_BImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    int arg2 ;
    int arg3 ;
    otk::BImage *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:new_BImage",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BImage *)new otk::BImage(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BImage, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_BImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImage *arg1 = (otk::BImage *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BImage",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImage_render(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImage *arg1 = (otk::BImage *) 0 ;
    otk::BTexture *arg2 = 0 ;
    Pixmap result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BImage_render",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImage,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->render((otk::BTexture const &)*arg2);
    
    {
        Pixmap * resultptr;
        resultptr = new Pixmap((Pixmap &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Pixmap, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BImage_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__BImage, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_BImageControl(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimerQueueManager *arg1 = (otk::OBTimerQueueManager *) 0 ;
    otk::ScreenInfo *arg2 = (otk::ScreenInfo *) 0 ;
    bool arg3 = (bool) False ;
    int arg4 = (int) 4 ;
    unsigned long arg5 = (unsigned long) 300000l ;
    unsigned long arg6 = (unsigned long) 200l ;
    otk::BImageControl *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OiOO:new_BImageControl",&obj0,&obj1,&obj2,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimerQueueManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = (bool) PyInt_AsLong(obj2);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj4) {
        arg5 = (unsigned long) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj5) {
        arg6 = (unsigned long) PyInt_AsLong(obj5);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (otk::BImageControl *)new otk::BImageControl(arg1,(otk::ScreenInfo const *)arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BImageControl, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_BImageControl(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BImageControl",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_doDither(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BImageControl_doDither",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->doDither();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getScreenInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    otk::ScreenInfo *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BImageControl_getScreenInfo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::ScreenInfo *)((otk::BImageControl const *)arg1)->getScreenInfo();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__ScreenInfo, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getDrawable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    Window result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BImageControl_getDrawable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::BImageControl const *)arg1)->getDrawable();
    
    {
        Window * resultptr;
        resultptr = new Window((Window &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Window, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getVisual(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    Visual *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BImageControl_getVisual",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Visual *)(arg1)->getVisual();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Visual, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getBitsPerPixel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BImageControl_getBitsPerPixel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::BImageControl const *)arg1)->getBitsPerPixel();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getDepth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BImageControl_getDepth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::BImageControl const *)arg1)->getDepth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getColorsPerChannel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BImageControl_getColorsPerChannel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::BImageControl const *)arg1)->getColorsPerChannel();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getSqrt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    unsigned int arg2 ;
    unsigned long result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BImageControl_getSqrt",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (unsigned long)(arg1)->getSqrt(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_renderImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    unsigned int arg2 ;
    unsigned int arg3 ;
    otk::BTexture *arg4 = 0 ;
    Pixmap result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:BImageControl_renderImage",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (unsigned int) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->renderImage(arg2,arg3,(otk::BTexture const &)*arg4);
    
    {
        Pixmap * resultptr;
        resultptr = new Pixmap((Pixmap &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Pixmap, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_installRootColormap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BImageControl_installRootColormap",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->installRootColormap();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_removeImage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    Pixmap arg2 ;
    Pixmap *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BImageControl_removeImage",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Pixmap,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->removeImage(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getColorTables(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    unsigned char **arg2 = (unsigned char **) 0 ;
    unsigned char **arg3 = (unsigned char **) 0 ;
    unsigned char **arg4 = (unsigned char **) 0 ;
    int *arg5 = (int *) 0 ;
    int *arg6 = (int *) 0 ;
    int *arg7 = (int *) 0 ;
    int *arg8 = (int *) 0 ;
    int *arg9 = (int *) 0 ;
    int *arg10 = (int *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    PyObject * obj6  = 0 ;
    PyObject * obj7  = 0 ;
    PyObject * obj8  = 0 ;
    PyObject * obj9  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:BImageControl_getColorTables",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_unsigned_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_p_unsigned_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_p_unsigned_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj6,(void **) &arg7, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj7,(void **) &arg8, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj8,(void **) &arg9, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj9,(void **) &arg10, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->getColorTables(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getXColorTable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    XColor **arg2 = (XColor **) 0 ;
    int *arg3 = (int *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:BImageControl_getXColorTable",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_XColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->getXColorTable(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_getGradientBuffers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    unsigned int arg2 ;
    unsigned int arg3 ;
    unsigned int **arg4 = (unsigned int **) 0 ;
    unsigned int **arg5 = (unsigned int **) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:BImageControl_getGradientBuffers",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (unsigned int) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_p_unsigned_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_p_unsigned_int,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->getGradientBuffers(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_setDither(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BImageControl_setDither",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setDither(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_setColorsPerChannel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:BImageControl_setColorsPerChannel",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setColorsPerChannel(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BImageControl_timeout(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BImageControl_timeout",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    otk::BImageControl::timeout(arg1);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BImageControl_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__BImageControl, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Point__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Point *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Point")) goto fail;
    result = (otk::Point *)new otk::Point();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Point, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Point__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    otk::Point *result;
    
    if(!PyArg_ParseTuple(args,(char *)"ii:new_Point",&arg1,&arg2)) goto fail;
    result = (otk::Point *)new otk::Point(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Point, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Point(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Point__SWIG_0(self,args);
    }
    if (argc == 2) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_new_Point__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Point'");
    return NULL;
}


static PyObject *_wrap_Point_setX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Point *arg1 = (otk::Point *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:Point_setX",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setX(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point_x(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Point *arg1 = (otk::Point *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Point_x",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Point const *)arg1)->x();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point_setY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Point *arg1 = (otk::Point *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:Point_setY",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setY(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point_y(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Point *arg1 = (otk::Point *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Point_y",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Point const *)arg1)->y();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Point_setPoint(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Point *arg1 = (otk::Point *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:Point_setPoint",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setPoint(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Point(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Point *arg1 = (otk::Point *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Point",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Point_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__Point, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OBProperty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_OBProperty")) goto fail;
    result = (otk::OBProperty *)new otk::OBProperty();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OBProperty, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OBProperty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OBProperty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    Window arg2 ;
    int arg3 ;
    int arg4 ;
    unsigned long arg5 ;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiO:OBProperty_set",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    arg5 = (unsigned long) PyInt_AsLong(obj4);
    if (PyErr_Occurred()) SWIG_fail;
    ((otk::OBProperty const *)arg1)->set(arg2,(otk::OBProperty::Atoms )arg3,(otk::OBProperty::Atoms )arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    Window arg2 ;
    int arg3 ;
    int arg4 ;
    unsigned long *arg5 ;
    int arg6 ;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiOi:OBProperty_set",&obj0,&obj1,&arg3,&arg4,&obj4,&arg6)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_unsigned_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    ((otk::OBProperty const *)arg1)->set(arg2,(otk::OBProperty::Atoms )arg3,(otk::OBProperty::Atoms )arg4,arg5,arg6);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_set__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    Window arg2 ;
    int arg3 ;
    int arg4 ;
    std::string *arg5 = 0 ;
    Window *argp2 ;
    std::string temp5 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiO:OBProperty_set",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    {
        if (PyString_Check(obj4)) {
            temp5 = std::string(PyString_AsString(obj4));
            arg5 = &temp5;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    ((otk::OBProperty const *)arg1)->set(arg2,(otk::OBProperty::Atoms )arg3,(otk::OBProperty::StringType )arg4,(std::string const &)*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_set__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    Window arg2 ;
    int arg3 ;
    int arg4 ;
    otk::OBProperty::StringVect *arg5 = 0 ;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiO:OBProperty_set",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_otk__OBProperty__StringVect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    ((otk::OBProperty const *)arg1)->set(arg2,(otk::OBProperty::Atoms )arg3,(otk::OBProperty::StringType )arg4,(otk::OBProperty::StringVect const &)*arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBProperty, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Window, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_otk__OBProperty__StringVect, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_OBProperty_set__SWIG_3(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBProperty, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Window, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_OBProperty_set__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBProperty, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Window, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = PyString_Check(argv[4]) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_OBProperty_set__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBProperty, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Window, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_unsigned_long, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                _v = (PyInt_Check(argv[5]) || PyLong_Check(argv[5])) ? 1 : 0;
                            }
                            if (_v) {
                                return _wrap_OBProperty_set__SWIG_1(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'OBProperty_set'");
    return NULL;
}


static PyObject *_wrap_OBProperty_get__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    Window arg2 ;
    int arg3 ;
    int arg4 ;
    unsigned long *arg5 = (unsigned long *) 0 ;
    unsigned long **arg6 = (unsigned long **) 0 ;
    bool result;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiOO:OBProperty_get",&obj0,&obj1,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_unsigned_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_p_unsigned_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OBProperty const *)arg1)->get(arg2,(otk::OBProperty::Atoms )arg3,(otk::OBProperty::Atoms )arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_get__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    Window arg2 ;
    int arg3 ;
    int arg4 ;
    unsigned long *arg5 = (unsigned long *) 0 ;
    bool result;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiO:OBProperty_get",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_unsigned_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OBProperty const *)arg1)->get(arg2,(otk::OBProperty::Atoms )arg3,(otk::OBProperty::Atoms )arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_get__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    Window arg2 ;
    int arg3 ;
    int arg4 ;
    std::string *arg5 = (std::string *) 0 ;
    bool result;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiO:OBProperty_get",&obj0,&obj1,&arg3,&arg4,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_std__string,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OBProperty const *)arg1)->get(arg2,(otk::OBProperty::Atoms )arg3,(otk::OBProperty::StringType )arg4,arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_get__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    Window arg2 ;
    int arg3 ;
    int arg4 ;
    unsigned long *arg5 = (unsigned long *) 0 ;
    otk::OBProperty::StringVect *arg6 = (otk::OBProperty::StringVect *) 0 ;
    bool result;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj4  = 0 ;
    PyObject * obj5  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOiiOO:OBProperty_get",&obj0,&obj1,&arg3,&arg4,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_unsigned_long,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj5,(void **) &arg6, SWIGTYPE_p_otk__OBProperty__StringVect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OBProperty const *)arg1)->get(arg2,(otk::OBProperty::Atoms )arg3,(otk::OBProperty::StringType )arg4,arg5,arg6);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_get(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[7];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 6); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBProperty, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Window, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_unsigned_long, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_OBProperty_get__SWIG_1(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBProperty, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Window, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_std__string, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            return _wrap_OBProperty_get__SWIG_2(self,args);
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBProperty, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Window, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_unsigned_long, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_p_unsigned_long, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_OBProperty_get__SWIG_0(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    if (argc == 6) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBProperty, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Window, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            void *ptr;
                            if (SWIG_ConvertPtr(argv[4], (void **) &ptr, SWIGTYPE_p_unsigned_long, 0) == -1) {
                                _v = 0;
                                PyErr_Clear();
                            }else {
                                _v = 1;
                            }
                        }
                        if (_v) {
                            {
                                void *ptr;
                                if (SWIG_ConvertPtr(argv[5], (void **) &ptr, SWIGTYPE_p_otk__OBProperty__StringVect, 0) == -1) {
                                    _v = 0;
                                    PyErr_Clear();
                                }else {
                                    _v = 1;
                                }
                            }
                            if (_v) {
                                return _wrap_OBProperty_get__SWIG_3(self,args);
                            }
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'OBProperty_get'");
    return NULL;
}


static PyObject *_wrap_OBProperty_erase(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    Window arg2 ;
    int arg3 ;
    Window *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOi:OBProperty_erase",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Window,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    ((otk::OBProperty const *)arg1)->erase(arg2,(otk::OBProperty::Atoms )arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBProperty_atom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBProperty *arg1 = (otk::OBProperty *) 0 ;
    int arg2 ;
    Atom result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:OBProperty_atom",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::OBProperty const *)arg1)->atom((otk::OBProperty::Atoms )arg2);
    
    {
        Atom * resultptr;
        resultptr = new Atom((Atom &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Atom, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OBProperty_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OBProperty, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_Rect__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Rect")) goto fail;
    result = (otk::Rect *)new otk::Rect();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Rect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Rect__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    otk::Rect *result;
    
    if(!PyArg_ParseTuple(args,(char *)"iiii:new_Rect",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (otk::Rect *)new otk::Rect(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Rect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Rect__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Point *arg1 = 0 ;
    otk::Point *arg2 = 0 ;
    otk::Rect *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_Rect",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (otk::Rect *)new otk::Rect((otk::Point const &)*arg1,(otk::Point const &)*arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Rect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Rect__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = 0 ;
    otk::Rect *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Rect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (otk::Rect *)new otk::Rect((otk::Rect const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Rect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Rect__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    XRectangle *arg1 = 0 ;
    otk::Rect *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Rect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_XRectangle,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (otk::Rect *)new otk::Rect((XRectangle const &)*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Rect, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Rect(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Rect__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_Rect__SWIG_3(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_XRectangle, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_Rect__SWIG_4(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_Rect__SWIG_2(self,args);
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_new_Rect__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Rect'");
    return NULL;
}


static PyObject *_wrap_Rect_left(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_left",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Rect const *)arg1)->left();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_top(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_top",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Rect const *)arg1)->top();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_right(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_right",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Rect const *)arg1)->right();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_bottom(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_bottom",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Rect const *)arg1)->bottom();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_x(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_x",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Rect const *)arg1)->x();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_y(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_y",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Rect const *)arg1)->y();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_location(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Point result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_location",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::Rect const *)arg1)->location();
    
    {
        otk::Point * resultptr;
        resultptr = new otk::Point((otk::Point &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_otk__Point, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setX(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:Rect_setX",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setX(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setY(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:Rect_setY",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setY(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setPos__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:Rect_setPos",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setPos(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setPos__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Point *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Rect_setPos",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setPos((otk::Point const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setPos(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Rect_setPos__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Rect_setPos__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Rect_setPos'");
    return NULL;
}


static PyObject *_wrap_Rect_width(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_width",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Rect const *)arg1)->width();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_height(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_height",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::Rect const *)arg1)->height();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_size(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Point result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_size",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::Rect const *)arg1)->size();
    
    {
        otk::Point * resultptr;
        resultptr = new otk::Point((otk::Point &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_otk__Point, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:Rect_setWidth",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setWidth(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setHeight(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:Rect_setHeight",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setHeight(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setSize__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int arg2 ;
    int arg3 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:Rect_setSize",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setSize(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setSize__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Point *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Rect_setSize",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setSize((otk::Point const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setSize(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Rect_setSize__SWIG_1(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Rect_setSize__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Rect_setSize'");
    return NULL;
}


static PyObject *_wrap_Rect_setRect__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:Rect_setRect",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setRect(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setRect__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Point *arg2 = 0 ;
    otk::Point *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Rect_setRect",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setRect((otk::Point const &)*arg2,(otk::Point const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setRect(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Rect_setRect__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_Rect_setRect__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Rect_setRect'");
    return NULL;
}


static PyObject *_wrap_Rect_setCoords__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oiiii:Rect_setCoords",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setCoords(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setCoords__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Point *arg2 = 0 ;
    otk::Point *arg3 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Rect_setCoords",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setCoords((otk::Point const &)*arg2,(otk::Point const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_setCoords(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[6];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 5); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Rect_setCoords__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 5) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        {
                            _v = (PyInt_Check(argv[4]) || PyLong_Check(argv[4])) ? 1 : 0;
                        }
                        if (_v) {
                            return _wrap_Rect_setCoords__SWIG_0(self,args);
                        }
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Rect_setCoords'");
    return NULL;
}


static PyObject *_wrap_Rect_equals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Rect *arg2 = 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Rect_equals",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->operator ==((otk::Rect const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_valid(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Rect_valid",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::Rect const *)arg1)->valid();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_intersects(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Rect *arg2 = 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Rect_intersects",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::Rect const *)arg1)->intersects((otk::Rect const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_contains__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    int arg2 ;
    int arg3 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oii:Rect_contains",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::Rect const *)arg1)->contains(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_contains__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Point *arg2 = 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Rect_contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Point,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::Rect const *)arg1)->contains((otk::Point const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_contains__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    otk::Rect *arg2 = 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Rect_contains",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::Rect const *)arg1)->contains((otk::Rect const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Rect_contains(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Point, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Rect_contains__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Rect_contains__SWIG_2(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__Rect, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Rect_contains__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Rect_contains'");
    return NULL;
}


static PyObject *_wrap_delete_Rect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Rect *arg1 = (otk::Rect *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Rect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Rect,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Rect_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__Rect, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_ScreenInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int arg1 ;
    otk::ScreenInfo *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ScreenInfo",&obj0)) goto fail;
    arg1 = (unsigned int) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = (otk::ScreenInfo *)new otk::ScreenInfo(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__ScreenInfo, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScreenInfo_visual(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    Visual *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScreenInfo_visual",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Visual *)((otk::ScreenInfo const *)arg1)->visual();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Visual, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScreenInfo_rootWindow(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    Window result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScreenInfo_rootWindow",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::ScreenInfo const *)arg1)->rootWindow();
    
    {
        Window * resultptr;
        resultptr = new Window((Window &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Window, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScreenInfo_colormap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    Colormap result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScreenInfo_colormap",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::ScreenInfo const *)arg1)->colormap();
    
    {
        Colormap * resultptr;
        resultptr = new Colormap((Colormap &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Colormap, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScreenInfo_depth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScreenInfo_depth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((otk::ScreenInfo const *)arg1)->depth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScreenInfo_screen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScreenInfo_screen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::ScreenInfo const *)arg1)->screen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScreenInfo_rect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    otk::Rect *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScreenInfo_rect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        otk::Rect const &_result_ref = ((otk::ScreenInfo const *)arg1)->rect();
        result = (otk::Rect *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Rect, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScreenInfo_width(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScreenInfo_width",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::ScreenInfo const *)arg1)->width();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScreenInfo_height(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScreenInfo_height",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::ScreenInfo const *)arg1)->height();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ScreenInfo_displayString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    std::string *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ScreenInfo_displayString",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::string const &_result_ref = ((otk::ScreenInfo const *)arg1)->displayString();
        result = (std::string *) &_result_ref;
    }
    
    {
        resultobj = PyString_FromString(result->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ScreenInfo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::ScreenInfo *arg1 = (otk::ScreenInfo *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ScreenInfo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__ScreenInfo,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ScreenInfo_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__ScreenInfo, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Strut_top_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *arg1 = (otk::Strut *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Strut_top_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Strut,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->top = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Strut_top_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *arg1 = (otk::Strut *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Strut_top_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Strut,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->top);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Strut_bottom_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *arg1 = (otk::Strut *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Strut_bottom_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Strut,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->bottom = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Strut_bottom_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *arg1 = (otk::Strut *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Strut_bottom_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Strut,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->bottom);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Strut_left_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *arg1 = (otk::Strut *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Strut_left_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Strut,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->left = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Strut_left_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *arg1 = (otk::Strut *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Strut_left_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Strut,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->left);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Strut_right_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *arg1 = (otk::Strut *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Strut_right_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Strut,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->right = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Strut_right_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *arg1 = (otk::Strut *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Strut_right_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Strut,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->right);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Strut__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Strut")) goto fail;
    result = (otk::Strut *)new otk::Strut();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Strut, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Strut__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    otk::Strut *result;
    
    if(!PyArg_ParseTuple(args,(char *)"iiii:new_Strut",&arg1,&arg2,&arg3,&arg4)) goto fail;
    result = (otk::Strut *)new otk::Strut(arg1,arg2,arg3,arg4);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Strut, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Strut(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Strut__SWIG_0(self,args);
    }
    if (argc == 4) {
        int _v;
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_new_Strut__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Strut'");
    return NULL;
}


static PyObject *_wrap_delete_Strut(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Strut *arg1 = (otk::Strut *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Strut",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Strut,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Strut_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__Strut, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_PixmapMask_mask_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PixmapMask *arg1 = (otk::PixmapMask *) 0 ;
    Pixmap arg2 ;
    Pixmap *argp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:PixmapMask_mask_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_Pixmap,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->mask = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PixmapMask_mask_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PixmapMask *arg1 = (otk::PixmapMask *) 0 ;
    Pixmap result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:PixmapMask_mask_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->mask);
    
    {
        Pixmap * resultptr;
        resultptr = new Pixmap((Pixmap &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Pixmap, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PixmapMask_w_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PixmapMask *arg1 = (otk::PixmapMask *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:PixmapMask_w_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->w = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PixmapMask_w_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PixmapMask *arg1 = (otk::PixmapMask *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:PixmapMask_w_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->w);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PixmapMask_h_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PixmapMask *arg1 = (otk::PixmapMask *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:PixmapMask_h_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->h = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_PixmapMask_h_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PixmapMask *arg1 = (otk::PixmapMask *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:PixmapMask_h_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->h);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_PixmapMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PixmapMask *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_PixmapMask")) goto fail;
    result = (otk::PixmapMask *)new otk::PixmapMask();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PixmapMask, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_PixmapMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::PixmapMask *arg1 = (otk::PixmapMask *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_PixmapMask",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * PixmapMask_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__PixmapMask, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Style_image_control_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BImageControl *arg2 = (otk::BImageControl *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_image_control_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->image_control = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_image_control_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BImageControl *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_image_control_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BImageControl *) ((arg1)->image_control);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BImageControl, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_l_text_focus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *arg2 = (otk::BColor *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_l_text_focus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->l_text_focus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_l_text_focus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_l_text_focus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)& ((arg1)->l_text_focus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_l_text_unfocus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *arg2 = (otk::BColor *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_l_text_unfocus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->l_text_unfocus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_l_text_unfocus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_l_text_unfocus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)& ((arg1)->l_text_unfocus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_pic_focus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *arg2 = (otk::BColor *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_b_pic_focus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->b_pic_focus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_pic_focus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_b_pic_focus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)& ((arg1)->b_pic_focus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_pic_unfocus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *arg2 = (otk::BColor *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_b_pic_unfocus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->b_pic_unfocus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_pic_unfocus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_b_pic_unfocus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)& ((arg1)->b_pic_unfocus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_border_color_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *arg2 = (otk::BColor *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_border_color_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->border_color = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_border_color_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_border_color_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)& ((arg1)->border_color);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_font_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BFont *arg2 = (otk::BFont *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_font_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BFont,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->font = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_font_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BFont *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_font_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BFont *) ((arg1)->font);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BFont, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_f_focus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_f_focus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->f_focus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_f_focus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_f_focus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->f_focus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_f_unfocus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_f_unfocus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->f_unfocus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_f_unfocus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_f_unfocus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->f_unfocus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_t_focus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_t_focus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->t_focus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_t_focus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_t_focus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->t_focus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_t_unfocus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_t_unfocus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->t_unfocus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_t_unfocus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_t_unfocus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->t_unfocus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_l_focus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_l_focus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->l_focus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_l_focus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_l_focus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->l_focus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_l_unfocus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_l_unfocus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->l_unfocus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_l_unfocus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_l_unfocus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->l_unfocus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_h_focus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_h_focus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->h_focus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_h_focus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_h_focus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->h_focus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_h_unfocus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_h_unfocus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->h_unfocus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_h_unfocus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_h_unfocus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->h_unfocus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_focus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_b_focus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->b_focus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_focus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_b_focus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->b_focus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_unfocus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_b_unfocus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->b_unfocus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_unfocus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_b_unfocus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->b_unfocus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_pressed_focus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_b_pressed_focus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->b_pressed_focus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_pressed_focus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_b_pressed_focus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->b_pressed_focus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_pressed_unfocus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_b_pressed_unfocus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->b_pressed_unfocus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_b_pressed_unfocus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_b_pressed_unfocus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->b_pressed_unfocus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_g_focus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_g_focus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->g_focus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_g_focus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_g_focus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->g_focus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_g_unfocus_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *arg2 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_g_unfocus_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->g_unfocus = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_g_unfocus_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_g_unfocus_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)& ((arg1)->g_unfocus);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_close_button_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *arg2 = (otk::PixmapMask *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_close_button_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->close_button = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_close_button_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_close_button_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::PixmapMask *)& ((arg1)->close_button);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PixmapMask, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_max_button_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *arg2 = (otk::PixmapMask *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_max_button_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->max_button = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_max_button_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_max_button_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::PixmapMask *)& ((arg1)->max_button);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PixmapMask, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_icon_button_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *arg2 = (otk::PixmapMask *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_icon_button_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->icon_button = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_icon_button_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_icon_button_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::PixmapMask *)& ((arg1)->icon_button);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PixmapMask, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_stick_button_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *arg2 = (otk::PixmapMask *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_stick_button_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->stick_button = *arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_stick_button_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_stick_button_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::PixmapMask *)& ((arg1)->stick_button);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PixmapMask, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_justify_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:Style_justify_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->justify = (otk::Style::TextJustify )arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_justify_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_justify_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->justify);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_bullet_type_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    int arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:Style_bullet_type_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->bullet_type = (otk::Style::BulletType )arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_bullet_type_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_bullet_type_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->bullet_type);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_handle_width_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_handle_width_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->handle_width = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_handle_width_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_handle_width_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->handle_width);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_bevel_width_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_bevel_width_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->bevel_width = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_bevel_width_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_bevel_width_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->bevel_width);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_frame_width_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_frame_width_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->frame_width = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_frame_width_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_frame_width_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->frame_width);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_border_width_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_border_width_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->border_width = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_border_width_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_border_width_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->border_width);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_screen_number_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_screen_number_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->screen_number = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_screen_number_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_screen_number_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->screen_number);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_shadow_fonts_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_shadow_fonts_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->shadow_fonts = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_shadow_fonts_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_shadow_fonts_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->shadow_fonts);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_aa_fonts_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_aa_fonts_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->aa_fonts = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_aa_fonts_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_aa_fonts_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->aa_fonts);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Style__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Style")) goto fail;
    result = (otk::Style *)new otk::Style();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Style, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Style__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BImageControl *arg1 = (otk::BImageControl *) 0 ;
    otk::Style *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Style",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::Style *)new otk::Style(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__Style, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Style(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Style__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__BImageControl, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_Style__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Style'");
    return NULL;
}


static PyObject *_wrap_delete_Style(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Style",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_readDatabaseMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    std::string *arg2 = 0 ;
    otk::PixmapMask *arg3 = 0 ;
    otk::Configuration *arg4 = 0 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Style_readDatabaseMask",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_otk__PixmapMask,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->readDatabaseMask((std::string const &)*arg2,*arg3,(otk::Configuration const &)*arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_readDatabaseTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    otk::Configuration *arg4 = 0 ;
    bool arg5 = (bool) false ;
    otk::BTexture result;
    std::string temp2 ;
    std::string temp3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    PyObject * obj4  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO|O:Style_readDatabaseTexture",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    {
        if (PyString_Check(obj2)) {
            temp3 = std::string(PyString_AsString(obj2));
            arg3 = &temp3;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj4) {
        arg5 = (bool) PyInt_AsLong(obj4);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (arg1)->readDatabaseTexture((std::string const &)*arg2,(std::string const &)*arg3,(otk::Configuration const &)*arg4,arg5);
    
    {
        otk::BTexture * resultptr;
        resultptr = new otk::BTexture((otk::BTexture &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_otk__BTexture, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_readDatabaseColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    otk::Configuration *arg4 = 0 ;
    otk::BColor result;
    std::string temp2 ;
    std::string temp3 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:Style_readDatabaseColor",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    {
        if (PyString_Check(obj2)) {
            temp3 = std::string(PyString_AsString(obj2));
            arg3 = &temp3;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->readDatabaseColor((std::string const &)*arg2,(std::string const &)*arg3,(otk::Configuration const &)*arg4);
    
    {
        otk::BColor * resultptr;
        resultptr = new otk::BColor((otk::BColor &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_otk__BColor, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_readDatabaseFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    std::string *arg2 = 0 ;
    otk::Configuration *arg3 = 0 ;
    otk::BFont *result;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Style_readDatabaseFont",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (otk::BFont *)(arg1)->readDatabaseFont((std::string const &)*arg2,(otk::Configuration const &)*arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BFont, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_load(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::Configuration *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_load",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->load((otk::Configuration const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getCloseButtonMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getCloseButtonMask",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::PixmapMask *)(arg1)->getCloseButtonMask();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PixmapMask, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getMaximizeButtonMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getMaximizeButtonMask",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::PixmapMask *)(arg1)->getMaximizeButtonMask();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PixmapMask, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getIconifyButtonMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getIconifyButtonMask",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::PixmapMask *)(arg1)->getIconifyButtonMask();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PixmapMask, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getStickyButtonMask(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::PixmapMask *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getStickyButtonMask",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::PixmapMask *)(arg1)->getStickyButtonMask();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__PixmapMask, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getTextFocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getTextFocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)(arg1)->getTextFocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getTextUnfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getTextUnfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)(arg1)->getTextUnfocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getButtonPicFocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getButtonPicFocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)(arg1)->getButtonPicFocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getButtonPicUnfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getButtonPicUnfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)(arg1)->getButtonPicUnfocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getTitleFocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getTitleFocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getTitleFocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getTitleUnfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getTitleUnfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getTitleUnfocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getLabelFocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getLabelFocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getLabelFocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getLabelUnfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getLabelUnfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getLabelUnfocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getHandleFocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getHandleFocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getHandleFocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getHandleUnfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getHandleUnfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getHandleUnfocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getButtonFocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getButtonFocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getButtonFocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getButtonUnfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getButtonUnfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getButtonUnfocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getButtonPressedFocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getButtonPressedFocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getButtonPressedFocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getButtonPressedUnfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getButtonPressedUnfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getButtonPressedUnfocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getGripFocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getGripFocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getGripFocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getGripUnfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getGripUnfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)(arg1)->getGripUnfocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getHandleWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getHandleWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::Style const *)arg1)->getHandleWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getBevelWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getBevelWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::Style const *)arg1)->getBevelWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getFrameWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getFrameWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::Style const *)arg1)->getFrameWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getBorderWidth(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getBorderWidth",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::Style const *)arg1)->getBorderWidth();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getFont(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BFont *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getFont",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BFont *)((otk::Style const *)arg1)->getFont();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BFont, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_setShadowFonts(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_setShadowFonts",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setShadowFonts(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_hasShadowFonts(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_hasShadowFonts",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::Style const *)arg1)->hasShadowFonts();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_setAAFonts(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_setAAFonts",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setAAFonts(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_hasAAFonts(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_hasAAFonts",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::Style const *)arg1)->hasAAFonts();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_textJustify(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_textJustify",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->textJustify();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_bulletType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_bulletType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->bulletType();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getBorderColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getBorderColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BColor *)((otk::Style const *)arg1)->getBorderColor();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getFrameFocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getFrameFocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)((otk::Style const *)arg1)->getFrameFocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getFrameUnfocus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getFrameUnfocus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::BTexture *)((otk::Style const *)arg1)->getFrameUnfocus();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_setImageControl(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    otk::BImageControl *arg2 = (otk::BImageControl *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Style_setImageControl",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setImageControl(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Style_getScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::Style *arg1 = (otk::Style *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Style_getScreen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__Style,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)(arg1)->getScreen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Style_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__Style, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_BTexture__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int arg1 = (unsigned int) ~(0u) ;
    otk::BImageControl *arg2 = (otk::BImageControl *) 0 ;
    otk::BTexture *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|OO:new_BTexture",&obj0,&obj1)) goto fail;
    if (obj0) {
        arg1 = (unsigned int) PyInt_AsLong(obj0);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (otk::BTexture *)new otk::BTexture(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_BTexture__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string *arg1 = 0 ;
    unsigned int arg2 = (unsigned int) ~(0u) ;
    otk::BImageControl *arg3 = (otk::BImageControl *) 0 ;
    otk::BTexture *result;
    std::string temp1 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|OO:new_BTexture",&obj0,&obj1,&obj2)) goto fail;
    {
        if (PyString_Check(obj0)) {
            temp1 = std::string(PyString_AsString(obj0));
            arg1 = &temp1;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if (obj1) {
        arg2 = (unsigned int) PyInt_AsLong(obj1);
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (otk::BTexture *)new otk::BTexture((std::string const &)*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BTexture, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_BTexture(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 0) && (argc <= 2)) {
        int _v;
        if (argc <= 0) {
            return _wrap_new_BTexture__SWIG_0(self,args);
        }
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_BTexture__SWIG_0(self,args);
            }
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_otk__BImageControl, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_BTexture__SWIG_0(self,args);
            }
        }
    }
    if ((argc >= 1) && (argc <= 3)) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_BTexture__SWIG_1(self,args);
            }
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_new_BTexture__SWIG_1(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_otk__BImageControl, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    }else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_BTexture__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_BTexture'");
    return NULL;
}


static PyObject *_wrap_BTexture_setColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BColor *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BTexture_setColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setColor((otk::BColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_setColorTo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BColor *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BTexture_setColorTo",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setColorTo((otk::BColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_setBorderColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BColor *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BTexture_setBorderColor",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BColor,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setBorderColor((otk::BColor const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_color(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BTexture_color",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        otk::BColor const &_result_ref = ((otk::BTexture const *)arg1)->color();
        result = (otk::BColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_colorTo(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BTexture_colorTo",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        otk::BColor const &_result_ref = ((otk::BTexture const *)arg1)->colorTo();
        result = (otk::BColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_lightColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BTexture_lightColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        otk::BColor const &_result_ref = ((otk::BTexture const *)arg1)->lightColor();
        result = (otk::BColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_shadowColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BTexture_shadowColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        otk::BColor const &_result_ref = ((otk::BTexture const *)arg1)->shadowColor();
        result = (otk::BColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_borderColor(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BColor *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BTexture_borderColor",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        otk::BColor const &_result_ref = ((otk::BTexture const *)arg1)->borderColor();
        result = (otk::BColor *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__BColor, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_texture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    unsigned long result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BTexture_texture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((otk::BTexture const *)arg1)->texture();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_setTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BTexture_setTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_addTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BTexture_addTexture",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->addTexture(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_equals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BTexture *arg2 = 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BTexture_equals",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->operator ==((otk::BTexture const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_screen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    unsigned int result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BTexture_screen",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((otk::BTexture const *)arg1)->screen();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_setScreen(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BTexture_setScreen",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setScreen(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_setImageControl(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    otk::BImageControl *arg2 = (otk::BImageControl *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BTexture_setImageControl",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__BImageControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setImageControl(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_description(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    std::string *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:BTexture_description",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        std::string const &_result_ref = ((otk::BTexture const *)arg1)->description();
        result = (std::string *) &_result_ref;
    }
    
    {
        resultobj = PyString_FromString(result->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_setDescription(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    std::string *arg2 = 0 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:BTexture_setDescription",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->setDescription((std::string const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_BTexture_render(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    unsigned int arg2 ;
    unsigned int arg3 ;
    Pixmap arg4 = (Pixmap) (Pixmap)0 ;
    Pixmap result;
    Pixmap *argp4 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    PyObject * obj3  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO|O:BTexture_render",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (unsigned int) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    if (obj3) {
        if ((SWIG_ConvertPtr(obj3,(void **) &argp4, SWIGTYPE_p_Pixmap,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
        arg4 = *argp4; 
    }
    result = (arg1)->render(arg2,arg3,arg4);
    
    {
        Pixmap * resultptr;
        resultptr = new Pixmap((Pixmap &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_Pixmap, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_BTexture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::BTexture *arg1 = (otk::BTexture *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_BTexture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__BTexture,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * BTexture_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__BTexture, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OBTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimerQueueManager *arg1 = (otk::OBTimerQueueManager *) 0 ;
    otk::OBTimeoutHandler arg2 = (otk::OBTimeoutHandler) 0 ;
    otk::OBTimeoutData arg3 = (otk::OBTimeoutData) 0 ;
    otk::OBTimer *result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    PyObject * obj2  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_OBTimer",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimerQueueManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_otk__OBTimeoutHandler,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (otk::OBTimer *)new otk::OBTimer(arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OBTimer, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OBTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OBTimer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_fire(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBTimer_fire",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->fire();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_timing(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBTimer_timing",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OBTimer const *)arg1)->timing();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_recurring(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBTimer_recurring",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((otk::OBTimer const *)arg1)->recurring();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_timeout(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    timeval *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBTimer_timeout",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        timeval const &_result_ref = ((otk::OBTimer const *)arg1)->timeout();
        result = (timeval *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_timeval, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_startTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    timeval *result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBTimer_startTime",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        timeval const &_result_ref = ((otk::OBTimer const *)arg1)->startTime();
        result = (timeval *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_timeval, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_remainingTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    timeval *arg2 = 0 ;
    timeval result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OBTimer_remainingTime",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_timeval,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = ((otk::OBTimer const *)arg1)->remainingTime((timeval const &)*arg2);
    
    {
        timeval * resultptr;
        resultptr = new timeval((timeval &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_timeval, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_shouldFire(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    timeval *arg2 = 0 ;
    bool result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OBTimer_shouldFire",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_timeval,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((otk::OBTimer const *)arg1)->shouldFire((timeval const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_endTime(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    timeval result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBTimer_endTime",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((otk::OBTimer const *)arg1)->endTime();
    
    {
        timeval * resultptr;
        resultptr = new timeval((timeval &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_timeval, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_setRecurring(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    bool arg2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OBTimer_setRecurring",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (bool) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->setRecurring(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_setTimeout__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    long arg2 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ol:OBTimer_setTimeout",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->setTimeout(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_setTimeout__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    timeval *arg2 = 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OBTimer_setTimeout",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_timeval,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->setTimeout((timeval const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_setTimeout(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBTimer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_timeval, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                }else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_OBTimer_setTimeout__SWIG_1(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_otk__OBTimer, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            }else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_OBTimer_setTimeout__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'OBTimer_setTimeout'");
    return NULL;
}


static PyObject *_wrap_OBTimer_start(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBTimer_start",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->start();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimer_stop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimer *arg1 = (otk::OBTimer *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBTimer_stop",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->stop();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OBTimer_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OBTimer, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_new_OBTimerQueueManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimerQueueManager *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_OBTimerQueueManager")) goto fail;
    result = (otk::OBTimerQueueManager *)new otk::OBTimerQueueManager();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_otk__OBTimerQueueManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OBTimerQueueManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimerQueueManager *arg1 = (otk::OBTimerQueueManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OBTimerQueueManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimerQueueManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimerQueueManager_fire(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimerQueueManager *arg1 = (otk::OBTimerQueueManager *) 0 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OBTimerQueueManager_fire",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimerQueueManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->fire();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimerQueueManager_addTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimerQueueManager *arg1 = (otk::OBTimerQueueManager *) 0 ;
    otk::OBTimer *arg2 = (otk::OBTimer *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OBTimerQueueManager_addTimer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimerQueueManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->addTimer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OBTimerQueueManager_removeTimer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    otk::OBTimerQueueManager *arg1 = (otk::OBTimerQueueManager *) 0 ;
    otk::OBTimer *arg2 = (otk::OBTimer *) 0 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OBTimerQueueManager_removeTimer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_otk__OBTimerQueueManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_otk__OBTimer,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->removeTimer(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OBTimerQueueManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_otk__OBTimerQueueManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_BSENTINEL_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable BSENTINEL is read-only.");
    return 1;
}


static PyObject *_wrap_BSENTINEL_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)otk::BSENTINEL);
    return pyobj;
}


static PyObject *_wrap_expandTilde(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string *arg1 = 0 ;
    std::string result;
    std::string temp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:expandTilde",&obj0)) goto fail;
    {
        if (PyString_Check(obj0)) {
            temp1 = std::string(PyString_AsString(obj0));
            arg1 = &temp1;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    result = otk::expandTilde((std::string const &)*arg1);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_bexec(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string temp1 ;
    std::string temp2 ;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:bexec",&obj0,&obj1)) goto fail;
    {
        if (PyString_Check(obj0)) {
            temp1 = std::string(PyString_AsString(obj0));
            arg1 = &temp1;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1));
            arg2 = &temp2;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    otk::bexec((std::string const &)*arg1,(std::string const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_textPropertyToString(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Display *arg1 = (Display *) 0 ;
    XTextProperty *arg2 = 0 ;
    std::string result;
    PyObject * obj0  = 0 ;
    PyObject * obj1  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:textPropertyToString",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Display,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_XTextProperty,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = otk::textPropertyToString(arg1,*arg2);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_itostring_unsigned_long(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned long arg1 ;
    std::string result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:itostring_unsigned_long",&obj0)) goto fail;
    arg1 = (unsigned long) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = otk::itostring(arg1);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_itostring_long(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    long arg1 ;
    std::string result;
    
    if(!PyArg_ParseTuple(args,(char *)"l:itostring_long",&arg1)) goto fail;
    result = otk::itostring(arg1);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_itostring_unsigned(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned int arg1 ;
    std::string result;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:itostring_unsigned",&obj0)) goto fail;
    arg1 = (unsigned int) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = otk::itostring(arg1);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_itostring(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    int arg1 ;
    std::string result;
    
    if(!PyArg_ParseTuple(args,(char *)"i:itostring",&arg1)) goto fail;
    result = otk::itostring(arg1);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_basename(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    std::string *arg1 = 0 ;
    std::string result;
    std::string temp1 ;
    PyObject * obj0  = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:basename",&obj0)) goto fail;
    {
        if (PyString_Check(obj0)) {
            temp1 = std::string(PyString_AsString(obj0));
            arg1 = &temp1;
        }else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    result = otk::basename((std::string const &)*arg1);
    
    {
        resultobj = PyString_FromString((&result)->c_str());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"new_OtkEventDispatcher", _wrap_new_OtkEventDispatcher, METH_VARARGS },
	 { (char *)"delete_OtkEventDispatcher", _wrap_delete_OtkEventDispatcher, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_clearAllHandlers", _wrap_OtkEventDispatcher_clearAllHandlers, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_registerHandler", _wrap_OtkEventDispatcher_registerHandler, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_clearHandler", _wrap_OtkEventDispatcher_clearHandler, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_dispatchEvents", _wrap_OtkEventDispatcher_dispatchEvents, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_setFallbackHandler", _wrap_OtkEventDispatcher_setFallbackHandler, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_getFallbackHandler", _wrap_OtkEventDispatcher_getFallbackHandler, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_setMasterHandler", _wrap_OtkEventDispatcher_setMasterHandler, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_getMasterHandler", _wrap_OtkEventDispatcher_getMasterHandler, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_findHandler", _wrap_OtkEventDispatcher_findHandler, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_lastTime", _wrap_OtkEventDispatcher_lastTime, METH_VARARGS },
	 { (char *)"OtkEventDispatcher_swigregister", OtkEventDispatcher_swigregister, METH_VARARGS },
	 { (char *)"OtkEventHandler_handle", _wrap_OtkEventHandler_handle, METH_VARARGS },
	 { (char *)"OtkEventHandler_keyPressHandler", _wrap_OtkEventHandler_keyPressHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_keyReleaseHandler", _wrap_OtkEventHandler_keyReleaseHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_buttonPressHandler", _wrap_OtkEventHandler_buttonPressHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_buttonReleaseHandler", _wrap_OtkEventHandler_buttonReleaseHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_motionHandler", _wrap_OtkEventHandler_motionHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_enterHandler", _wrap_OtkEventHandler_enterHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_leaveHandler", _wrap_OtkEventHandler_leaveHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_focusHandler", _wrap_OtkEventHandler_focusHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_unfocusHandler", _wrap_OtkEventHandler_unfocusHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_exposeHandler", _wrap_OtkEventHandler_exposeHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_graphicsExposeHandler", _wrap_OtkEventHandler_graphicsExposeHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_noExposeEventHandler", _wrap_OtkEventHandler_noExposeEventHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_circulateRequestHandler", _wrap_OtkEventHandler_circulateRequestHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_configureRequestHandler", _wrap_OtkEventHandler_configureRequestHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_mapRequestHandler", _wrap_OtkEventHandler_mapRequestHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_resizeRequestHandler", _wrap_OtkEventHandler_resizeRequestHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_circulateHandler", _wrap_OtkEventHandler_circulateHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_configureHandler", _wrap_OtkEventHandler_configureHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_createHandler", _wrap_OtkEventHandler_createHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_destroyHandler", _wrap_OtkEventHandler_destroyHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_gravityHandler", _wrap_OtkEventHandler_gravityHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_mapHandler", _wrap_OtkEventHandler_mapHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_mappingHandler", _wrap_OtkEventHandler_mappingHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_reparentHandler", _wrap_OtkEventHandler_reparentHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_unmapHandler", _wrap_OtkEventHandler_unmapHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_visibilityHandler", _wrap_OtkEventHandler_visibilityHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_colorMapHandler", _wrap_OtkEventHandler_colorMapHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_propertyHandler", _wrap_OtkEventHandler_propertyHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_selectionClearHandler", _wrap_OtkEventHandler_selectionClearHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_selectionHandler", _wrap_OtkEventHandler_selectionHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_selectionRequestHandler", _wrap_OtkEventHandler_selectionRequestHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_clientMessageHandler", _wrap_OtkEventHandler_clientMessageHandler, METH_VARARGS },
	 { (char *)"delete_OtkEventHandler", _wrap_delete_OtkEventHandler, METH_VARARGS },
	 { (char *)"OtkEventHandler_swigregister", OtkEventHandler_swigregister, METH_VARARGS },
	 { (char *)"new_OtkWidget", _wrap_new_OtkWidget, METH_VARARGS },
	 { (char *)"delete_OtkWidget", _wrap_delete_OtkWidget, METH_VARARGS },
	 { (char *)"OtkWidget_update", _wrap_OtkWidget_update, METH_VARARGS },
	 { (char *)"OtkWidget_exposeHandler", _wrap_OtkWidget_exposeHandler, METH_VARARGS },
	 { (char *)"OtkWidget_configureHandler", _wrap_OtkWidget_configureHandler, METH_VARARGS },
	 { (char *)"OtkWidget_window", _wrap_OtkWidget_window, METH_VARARGS },
	 { (char *)"OtkWidget_parent", _wrap_OtkWidget_parent, METH_VARARGS },
	 { (char *)"OtkWidget_children", _wrap_OtkWidget_children, METH_VARARGS },
	 { (char *)"OtkWidget_screen", _wrap_OtkWidget_screen, METH_VARARGS },
	 { (char *)"OtkWidget_rect", _wrap_OtkWidget_rect, METH_VARARGS },
	 { (char *)"OtkWidget_move", _wrap_OtkWidget_move, METH_VARARGS },
	 { (char *)"OtkWidget_setWidth", _wrap_OtkWidget_setWidth, METH_VARARGS },
	 { (char *)"OtkWidget_setHeight", _wrap_OtkWidget_setHeight, METH_VARARGS },
	 { (char *)"OtkWidget_width", _wrap_OtkWidget_width, METH_VARARGS },
	 { (char *)"OtkWidget_height", _wrap_OtkWidget_height, METH_VARARGS },
	 { (char *)"OtkWidget_resize", _wrap_OtkWidget_resize, METH_VARARGS },
	 { (char *)"OtkWidget_setGeometry", _wrap_OtkWidget_setGeometry, METH_VARARGS },
	 { (char *)"OtkWidget_isVisible", _wrap_OtkWidget_isVisible, METH_VARARGS },
	 { (char *)"OtkWidget_show", _wrap_OtkWidget_show, METH_VARARGS },
	 { (char *)"OtkWidget_hide", _wrap_OtkWidget_hide, METH_VARARGS },
	 { (char *)"OtkWidget_isFocused", _wrap_OtkWidget_isFocused, METH_VARARGS },
	 { (char *)"OtkWidget_focus", _wrap_OtkWidget_focus, METH_VARARGS },
	 { (char *)"OtkWidget_unfocus", _wrap_OtkWidget_unfocus, METH_VARARGS },
	 { (char *)"OtkWidget_hasGrabbedMouse", _wrap_OtkWidget_hasGrabbedMouse, METH_VARARGS },
	 { (char *)"OtkWidget_grabMouse", _wrap_OtkWidget_grabMouse, METH_VARARGS },
	 { (char *)"OtkWidget_ungrabMouse", _wrap_OtkWidget_ungrabMouse, METH_VARARGS },
	 { (char *)"OtkWidget_hasGrabbedKeyboard", _wrap_OtkWidget_hasGrabbedKeyboard, METH_VARARGS },
	 { (char *)"OtkWidget_grabKeyboard", _wrap_OtkWidget_grabKeyboard, METH_VARARGS },
	 { (char *)"OtkWidget_ungrabKeyboard", _wrap_OtkWidget_ungrabKeyboard, METH_VARARGS },
	 { (char *)"OtkWidget_texture", _wrap_OtkWidget_texture, METH_VARARGS },
	 { (char *)"OtkWidget_setTexture", _wrap_OtkWidget_setTexture, METH_VARARGS },
	 { (char *)"OtkWidget_borderColor", _wrap_OtkWidget_borderColor, METH_VARARGS },
	 { (char *)"OtkWidget_setBorderColor", _wrap_OtkWidget_setBorderColor, METH_VARARGS },
	 { (char *)"OtkWidget_borderWidth", _wrap_OtkWidget_borderWidth, METH_VARARGS },
	 { (char *)"OtkWidget_setBorderWidth", _wrap_OtkWidget_setBorderWidth, METH_VARARGS },
	 { (char *)"OtkWidget_addChild", _wrap_OtkWidget_addChild, METH_VARARGS },
	 { (char *)"OtkWidget_removeChild", _wrap_OtkWidget_removeChild, METH_VARARGS },
	 { (char *)"OtkWidget_isStretchableHorz", _wrap_OtkWidget_isStretchableHorz, METH_VARARGS },
	 { (char *)"OtkWidget_setStretchableHorz", _wrap_OtkWidget_setStretchableHorz, METH_VARARGS },
	 { (char *)"OtkWidget_isStretchableVert", _wrap_OtkWidget_isStretchableVert, METH_VARARGS },
	 { (char *)"OtkWidget_setStretchableVert", _wrap_OtkWidget_setStretchableVert, METH_VARARGS },
	 { (char *)"OtkWidget_cursor", _wrap_OtkWidget_cursor, METH_VARARGS },
	 { (char *)"OtkWidget_setCursor", _wrap_OtkWidget_setCursor, METH_VARARGS },
	 { (char *)"OtkWidget_bevelWidth", _wrap_OtkWidget_bevelWidth, METH_VARARGS },
	 { (char *)"OtkWidget_setBevelWidth", _wrap_OtkWidget_setBevelWidth, METH_VARARGS },
	 { (char *)"OtkWidget_direction", _wrap_OtkWidget_direction, METH_VARARGS },
	 { (char *)"OtkWidget_setDirection", _wrap_OtkWidget_setDirection, METH_VARARGS },
	 { (char *)"OtkWidget_style", _wrap_OtkWidget_style, METH_VARARGS },
	 { (char *)"OtkWidget_setStyle", _wrap_OtkWidget_setStyle, METH_VARARGS },
	 { (char *)"OtkWidget_eventDispatcher", _wrap_OtkWidget_eventDispatcher, METH_VARARGS },
	 { (char *)"OtkWidget_setEventDispatcher", _wrap_OtkWidget_setEventDispatcher, METH_VARARGS },
	 { (char *)"OtkWidget_swigregister", OtkWidget_swigregister, METH_VARARGS },
	 { (char *)"new_OtkFocusWidget", _wrap_new_OtkFocusWidget, METH_VARARGS },
	 { (char *)"delete_OtkFocusWidget", _wrap_delete_OtkFocusWidget, METH_VARARGS },
	 { (char *)"OtkFocusWidget_focus", _wrap_OtkFocusWidget_focus, METH_VARARGS },
	 { (char *)"OtkFocusWidget_unfocus", _wrap_OtkFocusWidget_unfocus, METH_VARARGS },
	 { (char *)"OtkFocusWidget_setTexture", _wrap_OtkFocusWidget_setTexture, METH_VARARGS },
	 { (char *)"OtkFocusWidget_setBorderColor", _wrap_OtkFocusWidget_setBorderColor, METH_VARARGS },
	 { (char *)"OtkFocusWidget_setUnfocusTexture", _wrap_OtkFocusWidget_setUnfocusTexture, METH_VARARGS },
	 { (char *)"OtkFocusWidget_getUnfocusTexture", _wrap_OtkFocusWidget_getUnfocusTexture, METH_VARARGS },
	 { (char *)"OtkFocusWidget_setUnfocusBorderColor", _wrap_OtkFocusWidget_setUnfocusBorderColor, METH_VARARGS },
	 { (char *)"OtkFocusWidget_getUnfocusBorderColor", _wrap_OtkFocusWidget_getUnfocusBorderColor, METH_VARARGS },
	 { (char *)"OtkFocusWidget_isFocused", _wrap_OtkFocusWidget_isFocused, METH_VARARGS },
	 { (char *)"OtkFocusWidget_isUnfocused", _wrap_OtkFocusWidget_isUnfocused, METH_VARARGS },
	 { (char *)"OtkFocusWidget_swigregister", OtkFocusWidget_swigregister, METH_VARARGS },
	 { (char *)"new_OtkFocusLabel", _wrap_new_OtkFocusLabel, METH_VARARGS },
	 { (char *)"delete_OtkFocusLabel", _wrap_delete_OtkFocusLabel, METH_VARARGS },
	 { (char *)"OtkFocusLabel_getText", _wrap_OtkFocusLabel_getText, METH_VARARGS },
	 { (char *)"OtkFocusLabel_setText", _wrap_OtkFocusLabel_setText, METH_VARARGS },
	 { (char *)"OtkFocusLabel_update", _wrap_OtkFocusLabel_update, METH_VARARGS },
	 { (char *)"OtkFocusLabel_setStyle", _wrap_OtkFocusLabel_setStyle, METH_VARARGS },
	 { (char *)"OtkFocusLabel_swigregister", OtkFocusLabel_swigregister, METH_VARARGS },
	 { (char *)"new_OtkAppWidget", _wrap_new_OtkAppWidget, METH_VARARGS },
	 { (char *)"delete_OtkAppWidget", _wrap_delete_OtkAppWidget, METH_VARARGS },
	 { (char *)"OtkAppWidget_show", _wrap_OtkAppWidget_show, METH_VARARGS },
	 { (char *)"OtkAppWidget_hide", _wrap_OtkAppWidget_hide, METH_VARARGS },
	 { (char *)"OtkAppWidget_clientMessageHandler", _wrap_OtkAppWidget_clientMessageHandler, METH_VARARGS },
	 { (char *)"OtkAppWidget_swigregister", OtkAppWidget_swigregister, METH_VARARGS },
	 { (char *)"new_OtkApplication", _wrap_new_OtkApplication, METH_VARARGS },
	 { (char *)"delete_OtkApplication", _wrap_delete_OtkApplication, METH_VARARGS },
	 { (char *)"OtkApplication_run", _wrap_OtkApplication_run, METH_VARARGS },
	 { (char *)"OtkApplication_setDockable", _wrap_OtkApplication_setDockable, METH_VARARGS },
	 { (char *)"OtkApplication_isDockable", _wrap_OtkApplication_isDockable, METH_VARARGS },
	 { (char *)"OtkApplication_getStyle", _wrap_OtkApplication_getStyle, METH_VARARGS },
	 { (char *)"OtkApplication_swigregister", OtkApplication_swigregister, METH_VARARGS },
	 { (char *)"new_PointerAssassin", _wrap_new_PointerAssassin, METH_VARARGS },
	 { (char *)"delete_PointerAssassin", _wrap_delete_PointerAssassin, METH_VARARGS },
	 { (char *)"PointerAssassin_swigregister", PointerAssassin_swigregister, METH_VARARGS },
	 { (char *)"new_OtkButton", _wrap_new_OtkButton, METH_VARARGS },
	 { (char *)"delete_OtkButton", _wrap_delete_OtkButton, METH_VARARGS },
	 { (char *)"OtkButton_getPressedFocusTexture", _wrap_OtkButton_getPressedFocusTexture, METH_VARARGS },
	 { (char *)"OtkButton_setPressedFocusTexture", _wrap_OtkButton_setPressedFocusTexture, METH_VARARGS },
	 { (char *)"OtkButton_getPressedUnfocusTexture", _wrap_OtkButton_getPressedUnfocusTexture, METH_VARARGS },
	 { (char *)"OtkButton_setPressedUnfocusTexture", _wrap_OtkButton_setPressedUnfocusTexture, METH_VARARGS },
	 { (char *)"OtkButton_setTexture", _wrap_OtkButton_setTexture, METH_VARARGS },
	 { (char *)"OtkButton_setUnfocusTexture", _wrap_OtkButton_setUnfocusTexture, METH_VARARGS },
	 { (char *)"OtkButton_isPressed", _wrap_OtkButton_isPressed, METH_VARARGS },
	 { (char *)"OtkButton_press", _wrap_OtkButton_press, METH_VARARGS },
	 { (char *)"OtkButton_release", _wrap_OtkButton_release, METH_VARARGS },
	 { (char *)"OtkButton_buttonPressHandler", _wrap_OtkButton_buttonPressHandler, METH_VARARGS },
	 { (char *)"OtkButton_buttonReleaseHandler", _wrap_OtkButton_buttonReleaseHandler, METH_VARARGS },
	 { (char *)"OtkButton_setStyle", _wrap_OtkButton_setStyle, METH_VARARGS },
	 { (char *)"OtkButton_swigregister", OtkButton_swigregister, METH_VARARGS },
	 { (char *)"new_BColor", _wrap_new_BColor, METH_VARARGS },
	 { (char *)"delete_BColor", _wrap_delete_BColor, METH_VARARGS },
	 { (char *)"BColor_name", _wrap_BColor_name, METH_VARARGS },
	 { (char *)"BColor_red", _wrap_BColor_red, METH_VARARGS },
	 { (char *)"BColor_green", _wrap_BColor_green, METH_VARARGS },
	 { (char *)"BColor_blue", _wrap_BColor_blue, METH_VARARGS },
	 { (char *)"BColor_setRGB", _wrap_BColor_setRGB, METH_VARARGS },
	 { (char *)"BColor_screen", _wrap_BColor_screen, METH_VARARGS },
	 { (char *)"BColor_setScreen", _wrap_BColor_setScreen, METH_VARARGS },
	 { (char *)"BColor_isAllocated", _wrap_BColor_isAllocated, METH_VARARGS },
	 { (char *)"BColor_isValid", _wrap_BColor_isValid, METH_VARARGS },
	 { (char *)"BColor_pixel", _wrap_BColor_pixel, METH_VARARGS },
	 { (char *)"BColor_equals", _wrap_BColor_equals, METH_VARARGS },
	 { (char *)"BColor_cleanupColorCache", _wrap_BColor_cleanupColorCache, METH_VARARGS },
	 { (char *)"BColor_swigregister", BColor_swigregister, METH_VARARGS },
	 { (char *)"new_Configuration", _wrap_new_Configuration, METH_VARARGS },
	 { (char *)"delete_Configuration", _wrap_delete_Configuration, METH_VARARGS },
	 { (char *)"Configuration_file", _wrap_Configuration_file, METH_VARARGS },
	 { (char *)"Configuration_setFile", _wrap_Configuration_setFile, METH_VARARGS },
	 { (char *)"Configuration_autoSave", _wrap_Configuration_autoSave, METH_VARARGS },
	 { (char *)"Configuration_setAutoSave", _wrap_Configuration_setAutoSave, METH_VARARGS },
	 { (char *)"Configuration_isModified", _wrap_Configuration_isModified, METH_VARARGS },
	 { (char *)"Configuration_save", _wrap_Configuration_save, METH_VARARGS },
	 { (char *)"Configuration_load", _wrap_Configuration_load, METH_VARARGS },
	 { (char *)"Configuration_merge", _wrap_Configuration_merge, METH_VARARGS },
	 { (char *)"Configuration_create", _wrap_Configuration_create, METH_VARARGS },
	 { (char *)"Configuration_setValue_bool", _wrap_Configuration_setValue_bool, METH_VARARGS },
	 { (char *)"Configuration_setValue", _wrap_Configuration_setValue, METH_VARARGS },
	 { (char *)"Configuration_setValue_unsigned", _wrap_Configuration_setValue_unsigned, METH_VARARGS },
	 { (char *)"Configuration_setValue_long", _wrap_Configuration_setValue_long, METH_VARARGS },
	 { (char *)"Configuration_setValue_unsignedlong", _wrap_Configuration_setValue_unsignedlong, METH_VARARGS },
	 { (char *)"Configuration_setValue_string", _wrap_Configuration_setValue_string, METH_VARARGS },
	 { (char *)"Configuration_setValue_charptr", _wrap_Configuration_setValue_charptr, METH_VARARGS },
	 { (char *)"Configuration_getValue", _wrap_Configuration_getValue, METH_VARARGS },
	 { (char *)"Configuration_swigregister", Configuration_swigregister, METH_VARARGS },
	 { (char *)"OBDisplay_initialize", _wrap_OBDisplay_initialize, METH_VARARGS },
	 { (char *)"OBDisplay_destroy", _wrap_OBDisplay_destroy, METH_VARARGS },
	 { (char *)"OBDisplay_gcCache", _wrap_OBDisplay_gcCache, METH_VARARGS },
	 { (char *)"OBDisplay_screenInfo", _wrap_OBDisplay_screenInfo, METH_VARARGS },
	 { (char *)"OBDisplay_findScreen", _wrap_OBDisplay_findScreen, METH_VARARGS },
	 { (char *)"OBDisplay_shape", _wrap_OBDisplay_shape, METH_VARARGS },
	 { (char *)"OBDisplay_shapeEventBase", _wrap_OBDisplay_shapeEventBase, METH_VARARGS },
	 { (char *)"OBDisplay_xinerama", _wrap_OBDisplay_xinerama, METH_VARARGS },
	 { (char *)"OBDisplay_numLockMask", _wrap_OBDisplay_numLockMask, METH_VARARGS },
	 { (char *)"OBDisplay_scrollLockMask", _wrap_OBDisplay_scrollLockMask, METH_VARARGS },
	 { (char *)"OBDisplay_grab", _wrap_OBDisplay_grab, METH_VARARGS },
	 { (char *)"OBDisplay_ungrab", _wrap_OBDisplay_ungrab, METH_VARARGS },
	 { (char *)"OBDisplay_grabButton", _wrap_OBDisplay_grabButton, METH_VARARGS },
	 { (char *)"OBDisplay_ungrabButton", _wrap_OBDisplay_ungrabButton, METH_VARARGS },
	 { (char *)"OBDisplay_grabKey", _wrap_OBDisplay_grabKey, METH_VARARGS },
	 { (char *)"OBDisplay_ungrabKey", _wrap_OBDisplay_ungrabKey, METH_VARARGS },
	 { (char *)"delete_OBDisplay", _wrap_delete_OBDisplay, METH_VARARGS },
	 { (char *)"OBDisplay_swigregister", OBDisplay_swigregister, METH_VARARGS },
	 { (char *)"BFont_fallbackFont", _wrap_BFont_fallbackFont, METH_VARARGS },
	 { (char *)"BFont_setFallbackFont", _wrap_BFont_setFallbackFont, METH_VARARGS },
	 { (char *)"new_BFont", _wrap_new_BFont, METH_VARARGS },
	 { (char *)"delete_BFont", _wrap_delete_BFont, METH_VARARGS },
	 { (char *)"BFont_fontstring", _wrap_BFont_fontstring, METH_VARARGS },
	 { (char *)"BFont_height", _wrap_BFont_height, METH_VARARGS },
	 { (char *)"BFont_maxCharWidth", _wrap_BFont_maxCharWidth, METH_VARARGS },
	 { (char *)"BFont_measureString", _wrap_BFont_measureString, METH_VARARGS },
	 { (char *)"BFont_drawString", _wrap_BFont_drawString, METH_VARARGS },
	 { (char *)"BFont_swigregister", BFont_swigregister, METH_VARARGS },
	 { (char *)"BGCCacheContext_set", _wrap_BGCCacheContext_set, METH_VARARGS },
	 { (char *)"delete_BGCCacheContext", _wrap_delete_BGCCacheContext, METH_VARARGS },
	 { (char *)"BGCCacheContext_swigregister", BGCCacheContext_swigregister, METH_VARARGS },
	 { (char *)"BGCCacheItem_gc", _wrap_BGCCacheItem_gc, METH_VARARGS },
	 { (char *)"delete_BGCCacheItem", _wrap_delete_BGCCacheItem, METH_VARARGS },
	 { (char *)"BGCCacheItem_swigregister", BGCCacheItem_swigregister, METH_VARARGS },
	 { (char *)"new_BGCCache", _wrap_new_BGCCache, METH_VARARGS },
	 { (char *)"delete_BGCCache", _wrap_delete_BGCCache, METH_VARARGS },
	 { (char *)"BGCCache_purge", _wrap_BGCCache_purge, METH_VARARGS },
	 { (char *)"BGCCache_find", _wrap_BGCCache_find, METH_VARARGS },
	 { (char *)"BGCCache_release", _wrap_BGCCache_release, METH_VARARGS },
	 { (char *)"BGCCache_swigregister", BGCCache_swigregister, METH_VARARGS },
	 { (char *)"new_BPen", _wrap_new_BPen, METH_VARARGS },
	 { (char *)"delete_BPen", _wrap_delete_BPen, METH_VARARGS },
	 { (char *)"BPen_gc", _wrap_BPen_gc, METH_VARARGS },
	 { (char *)"BPen_swigregister", BPen_swigregister, METH_VARARGS },
	 { (char *)"new_BImage", _wrap_new_BImage, METH_VARARGS },
	 { (char *)"delete_BImage", _wrap_delete_BImage, METH_VARARGS },
	 { (char *)"BImage_render", _wrap_BImage_render, METH_VARARGS },
	 { (char *)"BImage_swigregister", BImage_swigregister, METH_VARARGS },
	 { (char *)"new_BImageControl", _wrap_new_BImageControl, METH_VARARGS },
	 { (char *)"delete_BImageControl", _wrap_delete_BImageControl, METH_VARARGS },
	 { (char *)"BImageControl_doDither", _wrap_BImageControl_doDither, METH_VARARGS },
	 { (char *)"BImageControl_getScreenInfo", _wrap_BImageControl_getScreenInfo, METH_VARARGS },
	 { (char *)"BImageControl_getDrawable", _wrap_BImageControl_getDrawable, METH_VARARGS },
	 { (char *)"BImageControl_getVisual", _wrap_BImageControl_getVisual, METH_VARARGS },
	 { (char *)"BImageControl_getBitsPerPixel", _wrap_BImageControl_getBitsPerPixel, METH_VARARGS },
	 { (char *)"BImageControl_getDepth", _wrap_BImageControl_getDepth, METH_VARARGS },
	 { (char *)"BImageControl_getColorsPerChannel", _wrap_BImageControl_getColorsPerChannel, METH_VARARGS },
	 { (char *)"BImageControl_getSqrt", _wrap_BImageControl_getSqrt, METH_VARARGS },
	 { (char *)"BImageControl_renderImage", _wrap_BImageControl_renderImage, METH_VARARGS },
	 { (char *)"BImageControl_installRootColormap", _wrap_BImageControl_installRootColormap, METH_VARARGS },
	 { (char *)"BImageControl_removeImage", _wrap_BImageControl_removeImage, METH_VARARGS },
	 { (char *)"BImageControl_getColorTables", _wrap_BImageControl_getColorTables, METH_VARARGS },
	 { (char *)"BImageControl_getXColorTable", _wrap_BImageControl_getXColorTable, METH_VARARGS },
	 { (char *)"BImageControl_getGradientBuffers", _wrap_BImageControl_getGradientBuffers, METH_VARARGS },
	 { (char *)"BImageControl_setDither", _wrap_BImageControl_setDither, METH_VARARGS },
	 { (char *)"BImageControl_setColorsPerChannel", _wrap_BImageControl_setColorsPerChannel, METH_VARARGS },
	 { (char *)"BImageControl_timeout", _wrap_BImageControl_timeout, METH_VARARGS },
	 { (char *)"BImageControl_swigregister", BImageControl_swigregister, METH_VARARGS },
	 { (char *)"new_Point", _wrap_new_Point, METH_VARARGS },
	 { (char *)"Point_setX", _wrap_Point_setX, METH_VARARGS },
	 { (char *)"Point_x", _wrap_Point_x, METH_VARARGS },
	 { (char *)"Point_setY", _wrap_Point_setY, METH_VARARGS },
	 { (char *)"Point_y", _wrap_Point_y, METH_VARARGS },
	 { (char *)"Point_setPoint", _wrap_Point_setPoint, METH_VARARGS },
	 { (char *)"delete_Point", _wrap_delete_Point, METH_VARARGS },
	 { (char *)"Point_swigregister", Point_swigregister, METH_VARARGS },
	 { (char *)"new_OBProperty", _wrap_new_OBProperty, METH_VARARGS },
	 { (char *)"delete_OBProperty", _wrap_delete_OBProperty, METH_VARARGS },
	 { (char *)"OBProperty_set", _wrap_OBProperty_set, METH_VARARGS },
	 { (char *)"OBProperty_get", _wrap_OBProperty_get, METH_VARARGS },
	 { (char *)"OBProperty_erase", _wrap_OBProperty_erase, METH_VARARGS },
	 { (char *)"OBProperty_atom", _wrap_OBProperty_atom, METH_VARARGS },
	 { (char *)"OBProperty_swigregister", OBProperty_swigregister, METH_VARARGS },
	 { (char *)"new_Rect", _wrap_new_Rect, METH_VARARGS },
	 { (char *)"Rect_left", _wrap_Rect_left, METH_VARARGS },
	 { (char *)"Rect_top", _wrap_Rect_top, METH_VARARGS },
	 { (char *)"Rect_right", _wrap_Rect_right, METH_VARARGS },
	 { (char *)"Rect_bottom", _wrap_Rect_bottom, METH_VARARGS },
	 { (char *)"Rect_x", _wrap_Rect_x, METH_VARARGS },
	 { (char *)"Rect_y", _wrap_Rect_y, METH_VARARGS },
	 { (char *)"Rect_location", _wrap_Rect_location, METH_VARARGS },
	 { (char *)"Rect_setX", _wrap_Rect_setX, METH_VARARGS },
	 { (char *)"Rect_setY", _wrap_Rect_setY, METH_VARARGS },
	 { (char *)"Rect_setPos", _wrap_Rect_setPos, METH_VARARGS },
	 { (char *)"Rect_width", _wrap_Rect_width, METH_VARARGS },
	 { (char *)"Rect_height", _wrap_Rect_height, METH_VARARGS },
	 { (char *)"Rect_size", _wrap_Rect_size, METH_VARARGS },
	 { (char *)"Rect_setWidth", _wrap_Rect_setWidth, METH_VARARGS },
	 { (char *)"Rect_setHeight", _wrap_Rect_setHeight, METH_VARARGS },
	 { (char *)"Rect_setSize", _wrap_Rect_setSize, METH_VARARGS },
	 { (char *)"Rect_setRect", _wrap_Rect_setRect, METH_VARARGS },
	 { (char *)"Rect_setCoords", _wrap_Rect_setCoords, METH_VARARGS },
	 { (char *)"Rect_equals", _wrap_Rect_equals, METH_VARARGS },
	 { (char *)"Rect_valid", _wrap_Rect_valid, METH_VARARGS },
	 { (char *)"Rect_intersects", _wrap_Rect_intersects, METH_VARARGS },
	 { (char *)"Rect_contains", _wrap_Rect_contains, METH_VARARGS },
	 { (char *)"delete_Rect", _wrap_delete_Rect, METH_VARARGS },
	 { (char *)"Rect_swigregister", Rect_swigregister, METH_VARARGS },
	 { (char *)"new_ScreenInfo", _wrap_new_ScreenInfo, METH_VARARGS },
	 { (char *)"ScreenInfo_visual", _wrap_ScreenInfo_visual, METH_VARARGS },
	 { (char *)"ScreenInfo_rootWindow", _wrap_ScreenInfo_rootWindow, METH_VARARGS },
	 { (char *)"ScreenInfo_colormap", _wrap_ScreenInfo_colormap, METH_VARARGS },
	 { (char *)"ScreenInfo_depth", _wrap_ScreenInfo_depth, METH_VARARGS },
	 { (char *)"ScreenInfo_screen", _wrap_ScreenInfo_screen, METH_VARARGS },
	 { (char *)"ScreenInfo_rect", _wrap_ScreenInfo_rect, METH_VARARGS },
	 { (char *)"ScreenInfo_width", _wrap_ScreenInfo_width, METH_VARARGS },
	 { (char *)"ScreenInfo_height", _wrap_ScreenInfo_height, METH_VARARGS },
	 { (char *)"ScreenInfo_displayString", _wrap_ScreenInfo_displayString, METH_VARARGS },
	 { (char *)"delete_ScreenInfo", _wrap_delete_ScreenInfo, METH_VARARGS },
	 { (char *)"ScreenInfo_swigregister", ScreenInfo_swigregister, METH_VARARGS },
	 { (char *)"Strut_top_set", _wrap_Strut_top_set, METH_VARARGS },
	 { (char *)"Strut_top_get", _wrap_Strut_top_get, METH_VARARGS },
	 { (char *)"Strut_bottom_set", _wrap_Strut_bottom_set, METH_VARARGS },
	 { (char *)"Strut_bottom_get", _wrap_Strut_bottom_get, METH_VARARGS },
	 { (char *)"Strut_left_set", _wrap_Strut_left_set, METH_VARARGS },
	 { (char *)"Strut_left_get", _wrap_Strut_left_get, METH_VARARGS },
	 { (char *)"Strut_right_set", _wrap_Strut_right_set, METH_VARARGS },
	 { (char *)"Strut_right_get", _wrap_Strut_right_get, METH_VARARGS },
	 { (char *)"new_Strut", _wrap_new_Strut, METH_VARARGS },
	 { (char *)"delete_Strut", _wrap_delete_Strut, METH_VARARGS },
	 { (char *)"Strut_swigregister", Strut_swigregister, METH_VARARGS },
	 { (char *)"PixmapMask_mask_set", _wrap_PixmapMask_mask_set, METH_VARARGS },
	 { (char *)"PixmapMask_mask_get", _wrap_PixmapMask_mask_get, METH_VARARGS },
	 { (char *)"PixmapMask_w_set", _wrap_PixmapMask_w_set, METH_VARARGS },
	 { (char *)"PixmapMask_w_get", _wrap_PixmapMask_w_get, METH_VARARGS },
	 { (char *)"PixmapMask_h_set", _wrap_PixmapMask_h_set, METH_VARARGS },
	 { (char *)"PixmapMask_h_get", _wrap_PixmapMask_h_get, METH_VARARGS },
	 { (char *)"new_PixmapMask", _wrap_new_PixmapMask, METH_VARARGS },
	 { (char *)"delete_PixmapMask", _wrap_delete_PixmapMask, METH_VARARGS },
	 { (char *)"PixmapMask_swigregister", PixmapMask_swigregister, METH_VARARGS },
	 { (char *)"Style_image_control_set", _wrap_Style_image_control_set, METH_VARARGS },
	 { (char *)"Style_image_control_get", _wrap_Style_image_control_get, METH_VARARGS },
	 { (char *)"Style_l_text_focus_set", _wrap_Style_l_text_focus_set, METH_VARARGS },
	 { (char *)"Style_l_text_focus_get", _wrap_Style_l_text_focus_get, METH_VARARGS },
	 { (char *)"Style_l_text_unfocus_set", _wrap_Style_l_text_unfocus_set, METH_VARARGS },
	 { (char *)"Style_l_text_unfocus_get", _wrap_Style_l_text_unfocus_get, METH_VARARGS },
	 { (char *)"Style_b_pic_focus_set", _wrap_Style_b_pic_focus_set, METH_VARARGS },
	 { (char *)"Style_b_pic_focus_get", _wrap_Style_b_pic_focus_get, METH_VARARGS },
	 { (char *)"Style_b_pic_unfocus_set", _wrap_Style_b_pic_unfocus_set, METH_VARARGS },
	 { (char *)"Style_b_pic_unfocus_get", _wrap_Style_b_pic_unfocus_get, METH_VARARGS },
	 { (char *)"Style_border_color_set", _wrap_Style_border_color_set, METH_VARARGS },
	 { (char *)"Style_border_color_get", _wrap_Style_border_color_get, METH_VARARGS },
	 { (char *)"Style_font_set", _wrap_Style_font_set, METH_VARARGS },
	 { (char *)"Style_font_get", _wrap_Style_font_get, METH_VARARGS },
	 { (char *)"Style_f_focus_set", _wrap_Style_f_focus_set, METH_VARARGS },
	 { (char *)"Style_f_focus_get", _wrap_Style_f_focus_get, METH_VARARGS },
	 { (char *)"Style_f_unfocus_set", _wrap_Style_f_unfocus_set, METH_VARARGS },
	 { (char *)"Style_f_unfocus_get", _wrap_Style_f_unfocus_get, METH_VARARGS },
	 { (char *)"Style_t_focus_set", _wrap_Style_t_focus_set, METH_VARARGS },
	 { (char *)"Style_t_focus_get", _wrap_Style_t_focus_get, METH_VARARGS },
	 { (char *)"Style_t_unfocus_set", _wrap_Style_t_unfocus_set, METH_VARARGS },
	 { (char *)"Style_t_unfocus_get", _wrap_Style_t_unfocus_get, METH_VARARGS },
	 { (char *)"Style_l_focus_set", _wrap_Style_l_focus_set, METH_VARARGS },
	 { (char *)"Style_l_focus_get", _wrap_Style_l_focus_get, METH_VARARGS },
	 { (char *)"Style_l_unfocus_set", _wrap_Style_l_unfocus_set, METH_VARARGS },
	 { (char *)"Style_l_unfocus_get", _wrap_Style_l_unfocus_get, METH_VARARGS },
	 { (char *)"Style_h_focus_set", _wrap_Style_h_focus_set, METH_VARARGS },
	 { (char *)"Style_h_focus_get", _wrap_Style_h_focus_get, METH_VARARGS },
	 { (char *)"Style_h_unfocus_set", _wrap_Style_h_unfocus_set, METH_VARARGS },
	 { (char *)"Style_h_unfocus_get", _wrap_Style_h_unfocus_get, METH_VARARGS },
	 { (char *)"Style_b_focus_set", _wrap_Style_b_focus_set, METH_VARARGS },
	 { (char *)"Style_b_focus_get", _wrap_Style_b_focus_get, METH_VARARGS },
	 { (char *)"Style_b_unfocus_set", _wrap_Style_b_unfocus_set, METH_VARARGS },
	 { (char *)"Style_b_unfocus_get", _wrap_Style_b_unfocus_get, METH_VARARGS },
	 { (char *)"Style_b_pressed_focus_set", _wrap_Style_b_pressed_focus_set, METH_VARARGS },
	 { (char *)"Style_b_pressed_focus_get", _wrap_Style_b_pressed_focus_get, METH_VARARGS },
	 { (char *)"Style_b_pressed_unfocus_set", _wrap_Style_b_pressed_unfocus_set, METH_VARARGS },
	 { (char *)"Style_b_pressed_unfocus_get", _wrap_Style_b_pressed_unfocus_get, METH_VARARGS },
	 { (char *)"Style_g_focus_set", _wrap_Style_g_focus_set, METH_VARARGS },
	 { (char *)"Style_g_focus_get", _wrap_Style_g_focus_get, METH_VARARGS },
	 { (char *)"Style_g_unfocus_set", _wrap_Style_g_unfocus_set, METH_VARARGS },
	 { (char *)"Style_g_unfocus_get", _wrap_Style_g_unfocus_get, METH_VARARGS },
	 { (char *)"Style_close_button_set", _wrap_Style_close_button_set, METH_VARARGS },
	 { (char *)"Style_close_button_get", _wrap_Style_close_button_get, METH_VARARGS },
	 { (char *)"Style_max_button_set", _wrap_Style_max_button_set, METH_VARARGS },
	 { (char *)"Style_max_button_get", _wrap_Style_max_button_get, METH_VARARGS },
	 { (char *)"Style_icon_button_set", _wrap_Style_icon_button_set, METH_VARARGS },
	 { (char *)"Style_icon_button_get", _wrap_Style_icon_button_get, METH_VARARGS },
	 { (char *)"Style_stick_button_set", _wrap_Style_stick_button_set, METH_VARARGS },
	 { (char *)"Style_stick_button_get", _wrap_Style_stick_button_get, METH_VARARGS },
	 { (char *)"Style_justify_set", _wrap_Style_justify_set, METH_VARARGS },
	 { (char *)"Style_justify_get", _wrap_Style_justify_get, METH_VARARGS },
	 { (char *)"Style_bullet_type_set", _wrap_Style_bullet_type_set, METH_VARARGS },
	 { (char *)"Style_bullet_type_get", _wrap_Style_bullet_type_get, METH_VARARGS },
	 { (char *)"Style_handle_width_set", _wrap_Style_handle_width_set, METH_VARARGS },
	 { (char *)"Style_handle_width_get", _wrap_Style_handle_width_get, METH_VARARGS },
	 { (char *)"Style_bevel_width_set", _wrap_Style_bevel_width_set, METH_VARARGS },
	 { (char *)"Style_bevel_width_get", _wrap_Style_bevel_width_get, METH_VARARGS },
	 { (char *)"Style_frame_width_set", _wrap_Style_frame_width_set, METH_VARARGS },
	 { (char *)"Style_frame_width_get", _wrap_Style_frame_width_get, METH_VARARGS },
	 { (char *)"Style_border_width_set", _wrap_Style_border_width_set, METH_VARARGS },
	 { (char *)"Style_border_width_get", _wrap_Style_border_width_get, METH_VARARGS },
	 { (char *)"Style_screen_number_set", _wrap_Style_screen_number_set, METH_VARARGS },
	 { (char *)"Style_screen_number_get", _wrap_Style_screen_number_get, METH_VARARGS },
	 { (char *)"Style_shadow_fonts_set", _wrap_Style_shadow_fonts_set, METH_VARARGS },
	 { (char *)"Style_shadow_fonts_get", _wrap_Style_shadow_fonts_get, METH_VARARGS },
	 { (char *)"Style_aa_fonts_set", _wrap_Style_aa_fonts_set, METH_VARARGS },
	 { (char *)"Style_aa_fonts_get", _wrap_Style_aa_fonts_get, METH_VARARGS },
	 { (char *)"new_Style", _wrap_new_Style, METH_VARARGS },
	 { (char *)"delete_Style", _wrap_delete_Style, METH_VARARGS },
	 { (char *)"Style_readDatabaseMask", _wrap_Style_readDatabaseMask, METH_VARARGS },
	 { (char *)"Style_readDatabaseTexture", _wrap_Style_readDatabaseTexture, METH_VARARGS },
	 { (char *)"Style_readDatabaseColor", _wrap_Style_readDatabaseColor, METH_VARARGS },
	 { (char *)"Style_readDatabaseFont", _wrap_Style_readDatabaseFont, METH_VARARGS },
	 { (char *)"Style_load", _wrap_Style_load, METH_VARARGS },
	 { (char *)"Style_getCloseButtonMask", _wrap_Style_getCloseButtonMask, METH_VARARGS },
	 { (char *)"Style_getMaximizeButtonMask", _wrap_Style_getMaximizeButtonMask, METH_VARARGS },
	 { (char *)"Style_getIconifyButtonMask", _wrap_Style_getIconifyButtonMask, METH_VARARGS },
	 { (char *)"Style_getStickyButtonMask", _wrap_Style_getStickyButtonMask, METH_VARARGS },
	 { (char *)"Style_getTextFocus", _wrap_Style_getTextFocus, METH_VARARGS },
	 { (char *)"Style_getTextUnfocus", _wrap_Style_getTextUnfocus, METH_VARARGS },
	 { (char *)"Style_getButtonPicFocus", _wrap_Style_getButtonPicFocus, METH_VARARGS },
	 { (char *)"Style_getButtonPicUnfocus", _wrap_Style_getButtonPicUnfocus, METH_VARARGS },
	 { (char *)"Style_getTitleFocus", _wrap_Style_getTitleFocus, METH_VARARGS },
	 { (char *)"Style_getTitleUnfocus", _wrap_Style_getTitleUnfocus, METH_VARARGS },
	 { (char *)"Style_getLabelFocus", _wrap_Style_getLabelFocus, METH_VARARGS },
	 { (char *)"Style_getLabelUnfocus", _wrap_Style_getLabelUnfocus, METH_VARARGS },
	 { (char *)"Style_getHandleFocus", _wrap_Style_getHandleFocus, METH_VARARGS },
	 { (char *)"Style_getHandleUnfocus", _wrap_Style_getHandleUnfocus, METH_VARARGS },
	 { (char *)"Style_getButtonFocus", _wrap_Style_getButtonFocus, METH_VARARGS },
	 { (char *)"Style_getButtonUnfocus", _wrap_Style_getButtonUnfocus, METH_VARARGS },
	 { (char *)"Style_getButtonPressedFocus", _wrap_Style_getButtonPressedFocus, METH_VARARGS },
	 { (char *)"Style_getButtonPressedUnfocus", _wrap_Style_getButtonPressedUnfocus, METH_VARARGS },
	 { (char *)"Style_getGripFocus", _wrap_Style_getGripFocus, METH_VARARGS },
	 { (char *)"Style_getGripUnfocus", _wrap_Style_getGripUnfocus, METH_VARARGS },
	 { (char *)"Style_getHandleWidth", _wrap_Style_getHandleWidth, METH_VARARGS },
	 { (char *)"Style_getBevelWidth", _wrap_Style_getBevelWidth, METH_VARARGS },
	 { (char *)"Style_getFrameWidth", _wrap_Style_getFrameWidth, METH_VARARGS },
	 { (char *)"Style_getBorderWidth", _wrap_Style_getBorderWidth, METH_VARARGS },
	 { (char *)"Style_getFont", _wrap_Style_getFont, METH_VARARGS },
	 { (char *)"Style_setShadowFonts", _wrap_Style_setShadowFonts, METH_VARARGS },
	 { (char *)"Style_hasShadowFonts", _wrap_Style_hasShadowFonts, METH_VARARGS },
	 { (char *)"Style_setAAFonts", _wrap_Style_setAAFonts, METH_VARARGS },
	 { (char *)"Style_hasAAFonts", _wrap_Style_hasAAFonts, METH_VARARGS },
	 { (char *)"Style_textJustify", _wrap_Style_textJustify, METH_VARARGS },
	 { (char *)"Style_bulletType", _wrap_Style_bulletType, METH_VARARGS },
	 { (char *)"Style_getBorderColor", _wrap_Style_getBorderColor, METH_VARARGS },
	 { (char *)"Style_getFrameFocus", _wrap_Style_getFrameFocus, METH_VARARGS },
	 { (char *)"Style_getFrameUnfocus", _wrap_Style_getFrameUnfocus, METH_VARARGS },
	 { (char *)"Style_setImageControl", _wrap_Style_setImageControl, METH_VARARGS },
	 { (char *)"Style_getScreen", _wrap_Style_getScreen, METH_VARARGS },
	 { (char *)"Style_swigregister", Style_swigregister, METH_VARARGS },
	 { (char *)"new_BTexture", _wrap_new_BTexture, METH_VARARGS },
	 { (char *)"BTexture_setColor", _wrap_BTexture_setColor, METH_VARARGS },
	 { (char *)"BTexture_setColorTo", _wrap_BTexture_setColorTo, METH_VARARGS },
	 { (char *)"BTexture_setBorderColor", _wrap_BTexture_setBorderColor, METH_VARARGS },
	 { (char *)"BTexture_color", _wrap_BTexture_color, METH_VARARGS },
	 { (char *)"BTexture_colorTo", _wrap_BTexture_colorTo, METH_VARARGS },
	 { (char *)"BTexture_lightColor", _wrap_BTexture_lightColor, METH_VARARGS },
	 { (char *)"BTexture_shadowColor", _wrap_BTexture_shadowColor, METH_VARARGS },
	 { (char *)"BTexture_borderColor", _wrap_BTexture_borderColor, METH_VARARGS },
	 { (char *)"BTexture_texture", _wrap_BTexture_texture, METH_VARARGS },
	 { (char *)"BTexture_setTexture", _wrap_BTexture_setTexture, METH_VARARGS },
	 { (char *)"BTexture_addTexture", _wrap_BTexture_addTexture, METH_VARARGS },
	 { (char *)"BTexture_equals", _wrap_BTexture_equals, METH_VARARGS },
	 { (char *)"BTexture_screen", _wrap_BTexture_screen, METH_VARARGS },
	 { (char *)"BTexture_setScreen", _wrap_BTexture_setScreen, METH_VARARGS },
	 { (char *)"BTexture_setImageControl", _wrap_BTexture_setImageControl, METH_VARARGS },
	 { (char *)"BTexture_description", _wrap_BTexture_description, METH_VARARGS },
	 { (char *)"BTexture_setDescription", _wrap_BTexture_setDescription, METH_VARARGS },
	 { (char *)"BTexture_render", _wrap_BTexture_render, METH_VARARGS },
	 { (char *)"delete_BTexture", _wrap_delete_BTexture, METH_VARARGS },
	 { (char *)"BTexture_swigregister", BTexture_swigregister, METH_VARARGS },
	 { (char *)"new_OBTimer", _wrap_new_OBTimer, METH_VARARGS },
	 { (char *)"delete_OBTimer", _wrap_delete_OBTimer, METH_VARARGS },
	 { (char *)"OBTimer_fire", _wrap_OBTimer_fire, METH_VARARGS },
	 { (char *)"OBTimer_timing", _wrap_OBTimer_timing, METH_VARARGS },
	 { (char *)"OBTimer_recurring", _wrap_OBTimer_recurring, METH_VARARGS },
	 { (char *)"OBTimer_timeout", _wrap_OBTimer_timeout, METH_VARARGS },
	 { (char *)"OBTimer_startTime", _wrap_OBTimer_startTime, METH_VARARGS },
	 { (char *)"OBTimer_remainingTime", _wrap_OBTimer_remainingTime, METH_VARARGS },
	 { (char *)"OBTimer_shouldFire", _wrap_OBTimer_shouldFire, METH_VARARGS },
	 { (char *)"OBTimer_endTime", _wrap_OBTimer_endTime, METH_VARARGS },
	 { (char *)"OBTimer_setRecurring", _wrap_OBTimer_setRecurring, METH_VARARGS },
	 { (char *)"OBTimer_setTimeout", _wrap_OBTimer_setTimeout, METH_VARARGS },
	 { (char *)"OBTimer_start", _wrap_OBTimer_start, METH_VARARGS },
	 { (char *)"OBTimer_stop", _wrap_OBTimer_stop, METH_VARARGS },
	 { (char *)"OBTimer_swigregister", OBTimer_swigregister, METH_VARARGS },
	 { (char *)"new_OBTimerQueueManager", _wrap_new_OBTimerQueueManager, METH_VARARGS },
	 { (char *)"delete_OBTimerQueueManager", _wrap_delete_OBTimerQueueManager, METH_VARARGS },
	 { (char *)"OBTimerQueueManager_fire", _wrap_OBTimerQueueManager_fire, METH_VARARGS },
	 { (char *)"OBTimerQueueManager_addTimer", _wrap_OBTimerQueueManager_addTimer, METH_VARARGS },
	 { (char *)"OBTimerQueueManager_removeTimer", _wrap_OBTimerQueueManager_removeTimer, METH_VARARGS },
	 { (char *)"OBTimerQueueManager_swigregister", OBTimerQueueManager_swigregister, METH_VARARGS },
	 { (char *)"expandTilde", _wrap_expandTilde, METH_VARARGS },
	 { (char *)"bexec", _wrap_bexec, METH_VARARGS },
	 { (char *)"textPropertyToString", _wrap_textPropertyToString, METH_VARARGS },
	 { (char *)"itostring_unsigned_long", _wrap_itostring_unsigned_long, METH_VARARGS },
	 { (char *)"itostring_long", _wrap_itostring_long, METH_VARARGS },
	 { (char *)"itostring_unsigned", _wrap_itostring_unsigned, METH_VARARGS },
	 { (char *)"itostring", _wrap_itostring, METH_VARARGS },
	 { (char *)"basename", _wrap_basename, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_otk__OtkButtonTo_p_otk__OtkFocusWidget(void *x) {
    return (void *)((otk::OtkFocusWidget *) (otk::OtkFocusLabel *) ((otk::OtkButton *) x));
}
static void *_p_otk__OtkFocusLabelTo_p_otk__OtkFocusWidget(void *x) {
    return (void *)((otk::OtkFocusWidget *)  ((otk::OtkFocusLabel *) x));
}
static void *_p_otk__OtkButtonTo_p_otk__OtkWidget(void *x) {
    return (void *)((otk::OtkWidget *) (otk::OtkFocusWidget *)(otk::OtkFocusLabel *) ((otk::OtkButton *) x));
}
static void *_p_otk__OtkAppWidgetTo_p_otk__OtkWidget(void *x) {
    return (void *)((otk::OtkWidget *)  ((otk::OtkAppWidget *) x));
}
static void *_p_otk__OtkFocusWidgetTo_p_otk__OtkWidget(void *x) {
    return (void *)((otk::OtkWidget *)  ((otk::OtkFocusWidget *) x));
}
static void *_p_otk__OtkFocusLabelTo_p_otk__OtkWidget(void *x) {
    return (void *)((otk::OtkWidget *) (otk::OtkFocusWidget *) ((otk::OtkFocusLabel *) x));
}
static void *_p_otk__OtkButtonTo_p_otk__OtkEventHandler(void *x) {
    return (void *)((otk::OtkEventHandler *) (otk::OtkWidget *)(otk::OtkFocusWidget *)(otk::OtkFocusLabel *) ((otk::OtkButton *) x));
}
static void *_p_otk__OtkAppWidgetTo_p_otk__OtkEventHandler(void *x) {
    return (void *)((otk::OtkEventHandler *) (otk::OtkWidget *) ((otk::OtkAppWidget *) x));
}
static void *_p_otk__OtkWidgetTo_p_otk__OtkEventHandler(void *x) {
    return (void *)((otk::OtkEventHandler *)  ((otk::OtkWidget *) x));
}
static void *_p_otk__OtkFocusWidgetTo_p_otk__OtkEventHandler(void *x) {
    return (void *)((otk::OtkEventHandler *) (otk::OtkWidget *) ((otk::OtkFocusWidget *) x));
}
static void *_p_otk__OtkFocusLabelTo_p_otk__OtkEventHandler(void *x) {
    return (void *)((otk::OtkEventHandler *) (otk::OtkWidget *)(otk::OtkFocusWidget *) ((otk::OtkFocusLabel *) x));
}
static void *_p_otk__OtkButtonTo_p_otk__OtkFocusLabel(void *x) {
    return (void *)((otk::OtkFocusLabel *)  ((otk::OtkButton *) x));
}
static void *_p_otk__OtkApplicationTo_p_otk__OtkEventDispatcher(void *x) {
    return (void *)((otk::OtkEventDispatcher *)  ((otk::OtkApplication *) x));
}
static swig_type_info _swigt__p_otk__BGCCache[] = {{"_p_otk__BGCCache", 0, "otk::BGCCache *", 0},{"_p_otk__BGCCache"},{0}};
static swig_type_info _swigt__p_otk__BColor[] = {{"_p_otk__BColor", 0, "otk::BColor *", 0},{"_p_otk__BColor"},{0}};
static swig_type_info _swigt__p_otk__OBProperty__StringVect[] = {{"_p_otk__OBProperty__StringVect", 0, "otk::OBProperty::StringVect *", 0},{"_p_otk__OBProperty__StringVect"},{0}};
static swig_type_info _swigt__p_XFontStruct[] = {{"_p_XFontStruct", 0, "XFontStruct *", 0},{"_p_XFontStruct"},{0}};
static swig_type_info _swigt__p_otk__Configuration[] = {{"_p_otk__Configuration", 0, "otk::Configuration *", 0},{"_p_otk__Configuration"},{0}};
static swig_type_info _swigt__p_otk__PixmapMask[] = {{"_p_otk__PixmapMask", 0, "otk::PixmapMask *", 0},{"_p_otk__PixmapMask"},{0}};
static swig_type_info _swigt__p_Atom[] = {{"_p_Atom", 0, "Atom *", 0},{"_p_Atom"},{0}};
static swig_type_info _swigt__p_otk__PointerAssassin[] = {{"_p_otk__PointerAssassin", 0, "otk::PointerAssassin *", 0},{"_p_otk__PointerAssassin"},{0}};
static swig_type_info _swigt__p_otk__BImage[] = {{"_p_otk__BImage", 0, "otk::BImage *", 0},{"_p_otk__BImage"},{0}};
static swig_type_info _swigt__p_otk__OBTimer[] = {{"_p_otk__OBTimer", 0, "otk::OBTimer *", 0},{"_p_otk__OBTimer"},{0}};
static swig_type_info _swigt__p_otk__OtkWidget__OtkWidgetList[] = {{"_p_otk__OtkWidget__OtkWidgetList", 0, "otk::OtkWidget::OtkWidgetList const &", 0},{"_p_otk__OtkWidget__OtkWidgetList"},{0}};
static swig_type_info _swigt__p_bool[] = {{"_p_bool", 0, "bool *", 0},{"_p_bool"},{0}};
static swig_type_info _swigt__p_otk__OBDisplay[] = {{"_p_otk__OBDisplay", 0, "otk::OBDisplay *", 0},{"_p_otk__OBDisplay"},{0}};
static swig_type_info _swigt__p_Display[] = {{"_p_Display", 0, "Display *", 0},{"_p_Display"},{0}};
static swig_type_info _swigt__p_p_XColor[] = {{"_p_p_XColor", 0, "XColor **", 0},{"_p_p_XColor"},{0}};
static swig_type_info _swigt__p_XReparentEvent[] = {{"_p_XReparentEvent", 0, "XReparentEvent *", 0},{"_p_XReparentEvent"},{0}};
static swig_type_info _swigt__p_otk__BPen[] = {{"_p_otk__BPen", 0, "otk::BPen *", 0},{"_p_otk__BPen"},{0}};
static swig_type_info _swigt__p_otk__BImageControl[] = {{"_p_otk__BImageControl", 0, "otk::BImageControl *", 0},{"_p_otk__BImageControl"},{0}};
static swig_type_info _swigt__p_otk__OtkButton[] = {{"_p_otk__OtkButton", 0, "otk::OtkButton *", 0},{"_p_otk__OtkButton"},{0}};
static swig_type_info _swigt__p_otk__Rect[] = {{"_p_otk__Rect", 0, "otk::Rect *", 0},{"_p_otk__Rect"},{0}};
static swig_type_info _swigt__p_otk__Style[] = {{"_p_otk__Style", 0, "otk::Style *", 0},{"_p_otk__Style"},{0}};
static swig_type_info _swigt__p_XSelectionClearEvent[] = {{"_p_XSelectionClearEvent", 0, "XSelectionClearEvent *", 0},{"_p_XSelectionClearEvent"},{0}};
static swig_type_info _swigt__p_Visual[] = {{"_p_Visual", 0, "Visual *", 0},{"_p_Visual"},{0}};
static swig_type_info _swigt__p_timeval[] = {{"_p_timeval", 0, "timeval *", 0},{"_p_timeval"},{0}};
static swig_type_info _swigt__p_int[] = {{"_p_int", 0, "int *", 0},{"_p_int"},{0}};
static swig_type_info _swigt__p_otk__Strut[] = {{"_p_otk__Strut", 0, "otk::Strut *", 0},{"_p_otk__Strut"},{0}};
static swig_type_info _swigt__p_otk__OtkApplication[] = {{"_p_otk__OtkApplication", 0, "otk::OtkApplication *", 0},{"_p_otk__OtkApplication"},{0}};
static swig_type_info _swigt__p_XRectangle[] = {{"_p_XRectangle", 0, "XRectangle *", 0},{"_p_XRectangle"},{0}};
static swig_type_info _swigt__p_otk__OtkFocusWidget[] = {{"_p_otk__OtkFocusWidget", 0, "otk::OtkFocusWidget *", 0},{"_p_otk__OtkButton", _p_otk__OtkButtonTo_p_otk__OtkFocusWidget},{"_p_otk__OtkFocusWidget"},{"_p_otk__OtkFocusLabel", _p_otk__OtkFocusLabelTo_p_otk__OtkFocusWidget},{0}};
static swig_type_info _swigt__p_otk__OtkWidget[] = {{"_p_otk__OtkWidget", 0, "otk::OtkWidget *", 0},{"_p_otk__OtkButton", _p_otk__OtkButtonTo_p_otk__OtkWidget},{"_p_otk__OtkAppWidget", _p_otk__OtkAppWidgetTo_p_otk__OtkWidget},{"_p_otk__OtkWidget"},{"_p_otk__OtkFocusWidget", _p_otk__OtkFocusWidgetTo_p_otk__OtkWidget},{"_p_otk__OtkFocusLabel", _p_otk__OtkFocusLabelTo_p_otk__OtkWidget},{0}};
static swig_type_info _swigt__p_Cursor[] = {{"_p_Cursor", 0, "Cursor *", 0},{"_p_Cursor"},{0}};
static swig_type_info _swigt__p_Colormap[] = {{"_p_Colormap", 0, "Colormap *", 0},{"_p_Colormap"},{0}};
static swig_type_info _swigt__p_XGravityEvent[] = {{"_p_XGravityEvent", 0, "XGravityEvent *", 0},{"_p_XGravityEvent"},{0}};
static swig_type_info _swigt__p_XVisibilityEvent[] = {{"_p_XVisibilityEvent", 0, "XVisibilityEvent *", 0},{"_p_XVisibilityEvent"},{0}};
static swig_type_info _swigt__p_XPropertyEvent[] = {{"_p_XPropertyEvent", 0, "XPropertyEvent *", 0},{"_p_XPropertyEvent"},{0}};
static swig_type_info _swigt__p_Window[] = {{"_p_Window", 0, "Window *", 0},{"_p_Window"},{0}};
static swig_type_info _swigt__p_otk__BGCCacheContext[] = {{"_p_otk__BGCCacheContext", 0, "otk::BGCCacheContext *", 0},{"_p_otk__BGCCacheContext"},{0}};
static swig_type_info _swigt__p_XCreateWindowEvent[] = {{"_p_XCreateWindowEvent", 0, "XCreateWindowEvent *", 0},{"_p_XCreateWindowEvent"},{0}};
static swig_type_info _swigt__p_XDestroyWindowEvent[] = {{"_p_XDestroyWindowEvent", 0, "XDestroyWindowEvent *", 0},{"_p_XDestroyWindowEvent"},{0}};
static swig_type_info _swigt__p_Time[] = {{"_p_Time", 0, "Time *", 0},{"_p_Time"},{0}};
static swig_type_info _swigt__p_XCirculateEvent[] = {{"_p_XCirculateEvent", 0, "XCirculateEvent *", 0},{"_p_XCirculateEvent"},{0}};
static swig_type_info _swigt__p_XConfigureEvent[] = {{"_p_XConfigureEvent", 0, "XConfigureEvent *", 0},{"_p_XConfigureEvent"},{0}};
static swig_type_info _swigt__p_long[] = {{"_p_long", 0, "long *", 0},{"_p_long"},{0}};
static swig_type_info _swigt__p_otk__OBProperty[] = {{"_p_otk__OBProperty", 0, "otk::OBProperty *", 0},{"_p_otk__OBProperty"},{0}};
static swig_type_info _swigt__p_XTextProperty[] = {{"_p_XTextProperty", 0, "XTextProperty *", 0},{"_p_XTextProperty"},{0}};
static swig_type_info _swigt__p_otk__OtkEventHandler[] = {{"_p_otk__OtkEventHandler", 0, "otk::OtkEventHandler *", 0},{"_p_otk__OtkEventHandler"},{"_p_otk__OtkButton", _p_otk__OtkButtonTo_p_otk__OtkEventHandler},{"_p_otk__OtkAppWidget", _p_otk__OtkAppWidgetTo_p_otk__OtkEventHandler},{"_p_otk__OtkWidget", _p_otk__OtkWidgetTo_p_otk__OtkEventHandler},{"_p_otk__OtkFocusWidget", _p_otk__OtkFocusWidgetTo_p_otk__OtkEventHandler},{"_p_otk__OtkFocusLabel", _p_otk__OtkFocusLabelTo_p_otk__OtkEventHandler},{0}};
static swig_type_info _swigt__p_XSelectionRequestEvent[] = {{"_p_XSelectionRequestEvent", 0, "XSelectionRequestEvent *", 0},{"_p_XSelectionRequestEvent"},{0}};
static swig_type_info _swigt__p_XCirculateRequestEvent[] = {{"_p_XCirculateRequestEvent", 0, "XCirculateRequestEvent *", 0},{"_p_XCirculateRequestEvent"},{0}};
static swig_type_info _swigt__p_XConfigureRequestEvent[] = {{"_p_XConfigureRequestEvent", 0, "XConfigureRequestEvent *", 0},{"_p_XConfigureRequestEvent"},{0}};
static swig_type_info _swigt__p_XMapRequestEvent[] = {{"_p_XMapRequestEvent", 0, "XMapRequestEvent *", 0},{"_p_XMapRequestEvent"},{0}};
static swig_type_info _swigt__p_XResizeRequestEvent[] = {{"_p_XResizeRequestEvent", 0, "XResizeRequestEvent *", 0},{"_p_XResizeRequestEvent"},{0}};
static swig_type_info _swigt__otk__OBTimeoutHandler[] = {{"_otk__OBTimeoutHandler", 0, "otk::OBTimeoutHandler", 0},{"_otk__OBTimeoutHandler"},{0}};
static swig_type_info _swigt__p_XftDraw[] = {{"_p_XftDraw", 0, "XftDraw *", 0},{"_p_XftDraw"},{0}};
static swig_type_info _swigt__p_otk__ScreenInfo[] = {{"_p_otk__ScreenInfo", 0, "otk::ScreenInfo *", 0},{"_p_otk__ScreenInfo"},{0}};
static swig_type_info _swigt__p_otk__OtkFocusLabel[] = {{"_p_otk__OtkFocusLabel", 0, "otk::OtkFocusLabel *", 0},{"_p_otk__OtkButton", _p_otk__OtkButtonTo_p_otk__OtkFocusLabel},{"_p_otk__OtkFocusLabel"},{0}};
static swig_type_info _swigt__p_otk__BTexture[] = {{"_p_otk__BTexture", 0, "otk::BTexture *", 0},{"_p_otk__BTexture"},{0}};
static swig_type_info _swigt__p_otk__OtkEventDispatcher[] = {{"_p_otk__OtkEventDispatcher", 0, "otk::OtkEventDispatcher *", 0},{"_p_otk__OtkApplication", _p_otk__OtkApplicationTo_p_otk__OtkEventDispatcher},{"_p_otk__OtkEventDispatcher"},{0}};
static swig_type_info _swigt__p_otk__BFont[] = {{"_p_otk__BFont", 0, "otk::BFont *", 0},{"_p_otk__BFont"},{0}};
static swig_type_info _swigt__p_otk__Point[] = {{"_p_otk__Point", 0, "otk::Point *", 0},{"_p_otk__Point"},{0}};
static swig_type_info _swigt__p_p_char[] = {{"_p_p_char", 0, "char **", 0},{"_p_p_char"},{0}};
static swig_type_info _swigt__p_XMotionEvent[] = {{"_p_XMotionEvent", 0, "XMotionEvent *", 0},{"_p_XMotionEvent"},{0}};
static swig_type_info _swigt__p_XButtonEvent[] = {{"_p_XButtonEvent", 0, "XButtonEvent *", 0},{"_p_XButtonEvent"},{0}};
static swig_type_info _swigt__p_XSelectionEvent[] = {{"_p_XSelectionEvent", 0, "XSelectionEvent *", 0},{"_p_XSelectionEvent"},{0}};
static swig_type_info _swigt__p_Pixmap[] = {{"_p_Pixmap", 0, "Pixmap *", 0},{"_p_Pixmap"},{0}};
static swig_type_info _swigt__p_GC[] = {{"_p_GC", 0, "GC *", 0},{"_p_GC"},{0}};
static swig_type_info _swigt__p_otk__OBTimerQueueManager[] = {{"_p_otk__OBTimerQueueManager", 0, "otk::OBTimerQueueManager *", 0},{"_p_otk__OBTimerQueueManager"},{0}};
static swig_type_info _swigt__p_otk__OtkAppWidget[] = {{"_p_otk__OtkAppWidget", 0, "otk::OtkAppWidget *", 0},{"_p_otk__OtkAppWidget"},{0}};
static swig_type_info _swigt__p_XKeyEvent[] = {{"_p_XKeyEvent", 0, "XKeyEvent *", 0},{"_p_XKeyEvent"},{0}};
static swig_type_info _swigt__p_unsigned_long[] = {{"_p_unsigned_long", 0, "unsigned long *", 0},{"_p_unsigned_long"},{0}};
static swig_type_info _swigt__p_XEvent[] = {{"_p_XEvent", 0, "XEvent *", 0},{"_p_XEvent"},{0}};
static swig_type_info _swigt__p_p_unsigned_long[] = {{"_p_p_unsigned_long", 0, "unsigned long **", 0},{"_p_p_unsigned_long"},{0}};
static swig_type_info _swigt__p_std__string[] = {{"_p_std__string", 0, "std::string *", 0},{"_p_std__string"},{0}};
static swig_type_info _swigt__p_XCrossingEvent[] = {{"_p_XCrossingEvent", 0, "XCrossingEvent *", 0},{"_p_XCrossingEvent"},{0}};
static swig_type_info _swigt__p_XMappingEvent[] = {{"_p_XMappingEvent", 0, "XMappingEvent *", 0},{"_p_XMappingEvent"},{0}};
static swig_type_info _swigt__p_otk__BGCCacheItem[] = {{"_p_otk__BGCCacheItem", 0, "otk::BGCCacheItem *", 0},{"_p_otk__BGCCacheItem"},{0}};
static swig_type_info _swigt__p_p_unsigned_int[] = {{"_p_p_unsigned_int", 0, "unsigned int **", 0},{"_p_p_unsigned_int"},{0}};
static swig_type_info _swigt__p_unsigned_int[] = {{"_p_unsigned_int", 0, "unsigned int *", 0},{"_p_unsigned_int"},{0}};
static swig_type_info _swigt__p_p_unsigned_char[] = {{"_p_p_unsigned_char", 0, "unsigned char **", 0},{"_p_p_unsigned_char"},{0}};
static swig_type_info _swigt__p_XClientMessageEvent[] = {{"_p_XClientMessageEvent", 0, "XClientMessageEvent *", 0},{"_p_XClientMessageEvent"},{0}};
static swig_type_info _swigt__p_XExposeEvent[] = {{"_p_XExposeEvent", 0, "XExposeEvent *", 0},{"_p_XExposeEvent"},{0}};
static swig_type_info _swigt__p_XFocusChangeEvent[] = {{"_p_XFocusChangeEvent", 0, "XFocusChangeEvent *", 0},{"_p_XFocusChangeEvent"},{0}};
static swig_type_info _swigt__p_XGraphicsExposeEvent[] = {{"_p_XGraphicsExposeEvent", 0, "XGraphicsExposeEvent *", 0},{"_p_XGraphicsExposeEvent"},{0}};
static swig_type_info _swigt__p_XNoExposeEvent[] = {{"_p_XNoExposeEvent", 0, "XNoExposeEvent *", 0},{"_p_XNoExposeEvent"},{0}};
static swig_type_info _swigt__p_XMapEvent[] = {{"_p_XMapEvent", 0, "XMapEvent *", 0},{"_p_XMapEvent"},{0}};
static swig_type_info _swigt__p_XUnmapEvent[] = {{"_p_XUnmapEvent", 0, "XUnmapEvent *", 0},{"_p_XUnmapEvent"},{0}};
static swig_type_info _swigt__p_XColormapEvent[] = {{"_p_XColormapEvent", 0, "XColormapEvent *", 0},{"_p_XColormapEvent"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_otk__BGCCache, 
_swigt__p_otk__BColor, 
_swigt__p_otk__OBProperty__StringVect, 
_swigt__p_XFontStruct, 
_swigt__p_otk__Configuration, 
_swigt__p_otk__PixmapMask, 
_swigt__p_Atom, 
_swigt__p_otk__PointerAssassin, 
_swigt__p_otk__BImage, 
_swigt__p_otk__OBTimer, 
_swigt__p_otk__OtkWidget__OtkWidgetList, 
_swigt__p_bool, 
_swigt__p_otk__OBDisplay, 
_swigt__p_Display, 
_swigt__p_p_XColor, 
_swigt__p_XReparentEvent, 
_swigt__p_otk__BPen, 
_swigt__p_otk__BImageControl, 
_swigt__p_otk__OtkButton, 
_swigt__p_otk__Rect, 
_swigt__p_otk__Style, 
_swigt__p_XSelectionClearEvent, 
_swigt__p_Visual, 
_swigt__p_timeval, 
_swigt__p_int, 
_swigt__p_otk__Strut, 
_swigt__p_otk__OtkApplication, 
_swigt__p_XRectangle, 
_swigt__p_otk__OtkFocusWidget, 
_swigt__p_otk__OtkWidget, 
_swigt__p_Cursor, 
_swigt__p_Colormap, 
_swigt__p_XGravityEvent, 
_swigt__p_XVisibilityEvent, 
_swigt__p_XPropertyEvent, 
_swigt__p_Window, 
_swigt__p_otk__BGCCacheContext, 
_swigt__p_XCreateWindowEvent, 
_swigt__p_XDestroyWindowEvent, 
_swigt__p_Time, 
_swigt__p_XCirculateEvent, 
_swigt__p_XConfigureEvent, 
_swigt__p_long, 
_swigt__p_otk__OBProperty, 
_swigt__p_XTextProperty, 
_swigt__p_otk__OtkEventHandler, 
_swigt__p_XSelectionRequestEvent, 
_swigt__p_XCirculateRequestEvent, 
_swigt__p_XConfigureRequestEvent, 
_swigt__p_XMapRequestEvent, 
_swigt__p_XResizeRequestEvent, 
_swigt__otk__OBTimeoutHandler, 
_swigt__p_XftDraw, 
_swigt__p_otk__ScreenInfo, 
_swigt__p_otk__OtkFocusLabel, 
_swigt__p_otk__BTexture, 
_swigt__p_otk__OtkEventDispatcher, 
_swigt__p_otk__BFont, 
_swigt__p_otk__Point, 
_swigt__p_p_char, 
_swigt__p_XMotionEvent, 
_swigt__p_XButtonEvent, 
_swigt__p_XSelectionEvent, 
_swigt__p_Pixmap, 
_swigt__p_GC, 
_swigt__p_otk__OBTimerQueueManager, 
_swigt__p_otk__OtkAppWidget, 
_swigt__p_XKeyEvent, 
_swigt__p_unsigned_long, 
_swigt__p_XEvent, 
_swigt__p_p_unsigned_long, 
_swigt__p_std__string, 
_swigt__p_XCrossingEvent, 
_swigt__p_XMappingEvent, 
_swigt__p_otk__BGCCacheItem, 
_swigt__p_p_unsigned_int, 
_swigt__p_unsigned_int, 
_swigt__p_p_unsigned_char, 
_swigt__p_XClientMessageEvent, 
_swigt__p_XExposeEvent, 
_swigt__p_XFocusChangeEvent, 
_swigt__p_XGraphicsExposeEvent, 
_swigt__p_XNoExposeEvent, 
_swigt__p_XMapEvent, 
_swigt__p_XUnmapEvent, 
_swigt__p_XColormapEvent, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"OtkWidget_Horizontal", (long) otk::OtkWidget::Horizontal, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OtkWidget_Vertical", (long) otk::OtkWidget::Vertical, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_Atom_Cardinal", (long) otk::OBProperty::Atom_Cardinal, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_Atom_Window", (long) otk::OBProperty::Atom_Window, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_Atom_Pixmap", (long) otk::OBProperty::Atom_Pixmap, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_Atom_Atom", (long) otk::OBProperty::Atom_Atom, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_Atom_String", (long) otk::OBProperty::Atom_String, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_Atom_Utf8", (long) otk::OBProperty::Atom_Utf8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_openbox_pid", (long) otk::OBProperty::openbox_pid, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_colormap_windows", (long) otk::OBProperty::wm_colormap_windows, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_protocols", (long) otk::OBProperty::wm_protocols, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_state", (long) otk::OBProperty::wm_state, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_delete_window", (long) otk::OBProperty::wm_delete_window, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_take_focus", (long) otk::OBProperty::wm_take_focus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_change_state", (long) otk::OBProperty::wm_change_state, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_name", (long) otk::OBProperty::wm_name, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_icon_name", (long) otk::OBProperty::wm_icon_name, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_class", (long) otk::OBProperty::wm_class, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_wm_window_role", (long) otk::OBProperty::wm_window_role, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_motif_wm_hints", (long) otk::OBProperty::motif_wm_hints, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_attributes", (long) otk::OBProperty::blackbox_attributes, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_change_attributes", (long) otk::OBProperty::blackbox_change_attributes, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_hints", (long) otk::OBProperty::blackbox_hints, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_structure_messages", (long) otk::OBProperty::blackbox_structure_messages, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_notify_startup", (long) otk::OBProperty::blackbox_notify_startup, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_notify_window_add", (long) otk::OBProperty::blackbox_notify_window_add, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_notify_window_del", (long) otk::OBProperty::blackbox_notify_window_del, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_notify_window_focus", (long) otk::OBProperty::blackbox_notify_window_focus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_notify_current_workspace", (long) otk::OBProperty::blackbox_notify_current_workspace, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_notify_workspace_count", (long) otk::OBProperty::blackbox_notify_workspace_count, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_notify_window_raise", (long) otk::OBProperty::blackbox_notify_window_raise, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_notify_window_lower", (long) otk::OBProperty::blackbox_notify_window_lower, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_change_workspace", (long) otk::OBProperty::blackbox_change_workspace, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_change_window_focus", (long) otk::OBProperty::blackbox_change_window_focus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_blackbox_cycle_window_focus", (long) otk::OBProperty::blackbox_cycle_window_focus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_openbox_show_root_menu", (long) otk::OBProperty::openbox_show_root_menu, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_openbox_show_workspace_menu", (long) otk::OBProperty::openbox_show_workspace_menu, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_supported", (long) otk::OBProperty::net_supported, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_client_list", (long) otk::OBProperty::net_client_list, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_client_list_stacking", (long) otk::OBProperty::net_client_list_stacking, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_number_of_desktops", (long) otk::OBProperty::net_number_of_desktops, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_desktop_geometry", (long) otk::OBProperty::net_desktop_geometry, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_desktop_viewport", (long) otk::OBProperty::net_desktop_viewport, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_current_desktop", (long) otk::OBProperty::net_current_desktop, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_desktop_names", (long) otk::OBProperty::net_desktop_names, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_active_window", (long) otk::OBProperty::net_active_window, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_workarea", (long) otk::OBProperty::net_workarea, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_supporting_wm_check", (long) otk::OBProperty::net_supporting_wm_check, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_close_window", (long) otk::OBProperty::net_close_window, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_moveresize", (long) otk::OBProperty::net_wm_moveresize, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_name", (long) otk::OBProperty::net_wm_name, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_visible_name", (long) otk::OBProperty::net_wm_visible_name, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_icon_name", (long) otk::OBProperty::net_wm_icon_name, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_visible_icon_name", (long) otk::OBProperty::net_wm_visible_icon_name, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_desktop", (long) otk::OBProperty::net_wm_desktop, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_window_type", (long) otk::OBProperty::net_wm_window_type, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state", (long) otk::OBProperty::net_wm_state, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_strut", (long) otk::OBProperty::net_wm_strut, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_allowed_actions", (long) otk::OBProperty::net_wm_allowed_actions, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_window_type_desktop", (long) otk::OBProperty::net_wm_window_type_desktop, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_window_type_dock", (long) otk::OBProperty::net_wm_window_type_dock, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_window_type_toolbar", (long) otk::OBProperty::net_wm_window_type_toolbar, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_window_type_menu", (long) otk::OBProperty::net_wm_window_type_menu, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_window_type_utility", (long) otk::OBProperty::net_wm_window_type_utility, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_window_type_splash", (long) otk::OBProperty::net_wm_window_type_splash, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_window_type_dialog", (long) otk::OBProperty::net_wm_window_type_dialog, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_window_type_normal", (long) otk::OBProperty::net_wm_window_type_normal, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_moveresize_size_topleft", (long) otk::OBProperty::net_wm_moveresize_size_topleft, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_moveresize_size_topright", (long) otk::OBProperty::net_wm_moveresize_size_topright, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_moveresize_size_bottomleft", (long) otk::OBProperty::net_wm_moveresize_size_bottomleft, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_moveresize_size_bottomright", (long) otk::OBProperty::net_wm_moveresize_size_bottomright, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_moveresize_move", (long) otk::OBProperty::net_wm_moveresize_move, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_action_move", (long) otk::OBProperty::net_wm_action_move, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_action_resize", (long) otk::OBProperty::net_wm_action_resize, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_action_shade", (long) otk::OBProperty::net_wm_action_shade, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_action_maximize_horz", (long) otk::OBProperty::net_wm_action_maximize_horz, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_action_maximize_vert", (long) otk::OBProperty::net_wm_action_maximize_vert, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_action_change_desktop", (long) otk::OBProperty::net_wm_action_change_desktop, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_action_close", (long) otk::OBProperty::net_wm_action_close, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_modal", (long) otk::OBProperty::net_wm_state_modal, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_sticky", (long) otk::OBProperty::net_wm_state_sticky, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_maximized_vert", (long) otk::OBProperty::net_wm_state_maximized_vert, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_maximized_horz", (long) otk::OBProperty::net_wm_state_maximized_horz, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_shaded", (long) otk::OBProperty::net_wm_state_shaded, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_skip_taskbar", (long) otk::OBProperty::net_wm_state_skip_taskbar, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_skip_pager", (long) otk::OBProperty::net_wm_state_skip_pager, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_hidden", (long) otk::OBProperty::net_wm_state_hidden, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_fullscreen", (long) otk::OBProperty::net_wm_state_fullscreen, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_above", (long) otk::OBProperty::net_wm_state_above, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_net_wm_state_below", (long) otk::OBProperty::net_wm_state_below, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_kde_net_system_tray_windows", (long) otk::OBProperty::kde_net_system_tray_windows, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_kde_net_wm_system_tray_window_for", (long) otk::OBProperty::kde_net_wm_system_tray_window_for, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_kde_net_wm_window_type_override", (long) otk::OBProperty::kde_net_wm_window_type_override, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_NUM_ATOMS", (long) otk::OBProperty::NUM_ATOMS, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_ascii", (long) otk::OBProperty::ascii, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_utf8", (long) otk::OBProperty::utf8, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"OBProperty_NUM_STRING_TYPE", (long) otk::OBProperty::NUM_STRING_TYPE, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_ButtonFocus", (long) otk::Style::ButtonFocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_ButtonUnfocus", (long) otk::Style::ButtonUnfocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_TitleFocus", (long) otk::Style::TitleFocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_TitleUnfocus", (long) otk::Style::TitleUnfocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_LabelFocus", (long) otk::Style::LabelFocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_LabelUnfocus", (long) otk::Style::LabelUnfocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_HandleFocus", (long) otk::Style::HandleFocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_HandleUnfocus", (long) otk::Style::HandleUnfocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_GripFocus", (long) otk::Style::GripFocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_GripUnfocus", (long) otk::Style::GripUnfocus, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_LeftJustify", (long) otk::Style::LeftJustify, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_RightJustify", (long) otk::Style::RightJustify, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_CenterJustify", (long) otk::Style::CenterJustify, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_RoundBullet", (long) otk::Style::RoundBullet, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_TriangleBullet", (long) otk::Style::TriangleBullet, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_SquareBullet", (long) otk::Style::SquareBullet, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"Style_NoBullet", (long) otk::Style::NoBullet, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_NoTexture", (long) otk::BTexture::NoTexture, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Flat", (long) otk::BTexture::Flat, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Sunken", (long) otk::BTexture::Sunken, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Raised", (long) otk::BTexture::Raised, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Solid", (long) otk::BTexture::Solid, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Gradient", (long) otk::BTexture::Gradient, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Horizontal", (long) otk::BTexture::Horizontal, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Vertical", (long) otk::BTexture::Vertical, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Diagonal", (long) otk::BTexture::Diagonal, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_CrossDiagonal", (long) otk::BTexture::CrossDiagonal, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Rectangle", (long) otk::BTexture::Rectangle, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Pyramid", (long) otk::BTexture::Pyramid, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_PipeCross", (long) otk::BTexture::PipeCross, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Elliptic", (long) otk::BTexture::Elliptic, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Bevel1", (long) otk::BTexture::Bevel1, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Bevel2", (long) otk::BTexture::Bevel2, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Border", (long) otk::BTexture::Border, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Invert", (long) otk::BTexture::Invert, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Parent_Relative", (long) otk::BTexture::Parent_Relative, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"BTexture_Interlaced", (long) otk::BTexture::Interlaced, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
    PyDict_SetItemString(d,(char*)"cvar", SWIG_globals);
    SWIG_addvarlink(SWIG_globals,(char*)"OBDisplay_display",_wrap_OBDisplay_display_get, _wrap_OBDisplay_display_set);
    SWIG_addvarlink(SWIG_globals,(char*)"BSENTINEL",_wrap_BSENTINEL_get, _wrap_BSENTINEL_set);
}

